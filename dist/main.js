/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/gameLoop.js":
/*!*************************!*\
  !*** ./src/gameLoop.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setUpPlayers\": () => (/* binding */ setUpPlayers)\n/* harmony export */ });\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player.js */ \"./src/player.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"./src/index.js\");\n\n\nlet player1 = null;\nlet player2 = null;\nfunction setUpPlayers(Player1, Player2, isPlayer2Computer) {\n  let player2Name = Player2;\n  if (!Player1 || !Player2 && !isPlayer2Computer) return;\n  if (player1 !== null || player2 !== null) return;\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addHiddenClassToElement)(document.querySelector('.gamestart-form'));\n  if (isPlayer2Computer) player2Name = 'AI';\n  player1 = new _player_js__WEBPACK_IMPORTED_MODULE_0__.Player(Player1);\n  player2 = new _player_js__WEBPACK_IMPORTED_MODULE_0__.Player(player2Name, isPlayer2Computer);\n  const player1Gameboard = player1.gameboard.createGameboardHTML(player1.name);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addGameboardToDOMForPlayer)(player1Gameboard);\n  player1.placeShipsRandomly();\n  // for (let i = 1; i <= 5; i += 1) {\n  //   player1.gameboard.placeShip(5, player1.name, 'random', [i, 4], 'Y');\n  // }\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.showShipsOnGameboard)(player1.gameboard.getAllShipCoords());\n  const player2Gameboard = player2.gameboard.createGameboardHTML(player2.name);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addGameboardToDOMForPlayer)(player2Gameboard);\n  player2.placeShipsRandomly();\n  gameLoop();\n}\nfunction gameLoop() {\n  takeTurns();\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addEventlistenersToPlayerGameboard)(player2, humanShot);\n}\nfunction takeTurns() {\n  if (player1.isMyTurn === null && player2.isMyTurn === null) {\n    player1.isMyTurn = true;\n    player2.isMyTurn = false;\n  } else {\n    player1.isMyTurn = !player1.isMyTurn;\n    player2.isMyTurn = !player2.isMyTurn;\n  }\n}\nfunction checkIfGameEnded() {\n  if (player1.gameboard.areAllShipsSunk()) {\n    console.log(`${player2.name} won!`);\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.removeEventlistenersToPlayerGameboard)(player2, humanShot);\n  }\n  if (player2.gameboard.areAllShipsSunk()) {\n    console.log(`${player1.name} won!`);\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.removeEventlistenersToPlayerGameboard)(player2, humanShot);\n  }\n}\nfunction humanShot(e, enemyPlayer) {\n  const player = enemyPlayer === player1 ? player2 : player1;\n  if (!player.isMyTurn) return;\n  const shot = [Number(e.currentTarget.dataset.xCoord), Number(e.currentTarget.dataset.yCoord)];\n  const attackResult = player.attackEnemy(shot, enemyPlayer);\n  if (attackResult === null) {\n    console.log('Shot already taken');\n    return;\n  }\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.mutatePlayerGameboardAfterAttack)(enemyPlayer, shot, attackResult);\n  checkIfGameEnded();\n  takeTurns();\n  setTimeout(() => {\n    computerShot();\n  }, Math.floor(Math.random() * 1000));\n}\nasync function computerShot() {\n  if (!player2.isComputer || !player2.isMyTurn) return;\n  const computerShotData = player2.computerShot(player1);\n  console.log({\n    compShot: computerShotData.nextShot\n  });\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.mutatePlayerGameboardAfterAttack)(player1, computerShotData.nextShot, computerShotData.attackResponse);\n  checkIfGameEnded();\n  takeTurns();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/gameLoop.js\n");

/***/ }),

/***/ "./src/gameboard.js":
/*!**************************!*\
  !*** ./src/gameboard.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Gameboard\": () => (/* binding */ Gameboard)\n/* harmony export */ });\n/* harmony import */ var _ships_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ships.js */ \"./src/ships.js\");\n\nfunction Gameboard() {\n  return {\n    ships: [],\n    missedHits: [],\n    areAllShipsSunk() {\n      const statusOfShips = [];\n      this.ships.forEach(ship => {\n        statusOfShips.push(ship.isSunk());\n      });\n      return statusOfShips.every(status => status === true);\n    },\n    placeShip(length, team, type, coordinates, axis) {\n      this.ships.push(new _ships_js__WEBPACK_IMPORTED_MODULE_0__.Ship(length, team, type, coordinates, axis));\n    },\n    receiveAttack(attackCoords) {\n      if (this.determineIfArrayIsInArrayOfArrays(attackCoords, this.missedHits)) return null;\n      let isHit = false;\n      let didSink = null;\n      this.ships.forEach(ship => {\n        const shipCoords = this.getShipCoords(ship);\n        for (let i = 0; i < shipCoords.length; i += 1) {\n          if (shipCoords[i][0] === attackCoords[0] && shipCoords[i][1] === attackCoords[1]) {\n            ship.hit();\n            isHit = true;\n            didSink = ship.isSunk();\n            break;\n          }\n        }\n      });\n      this.missedHits.push(attackCoords);\n      return {\n        isHit,\n        didSink\n      };\n    },\n    getAllShipCoords() {\n      const allShipsCoords = [];\n      this.ships.forEach(ship => {\n        const shipCoords = this.getShipCoords(ship);\n        allShipsCoords.push(shipCoords);\n      });\n      return allShipsCoords;\n    },\n    getShipCoords(ship) {\n      const shipCoords = [];\n      for (let i = 0; i < ship.length; i += 1) {\n        if (ship.axis === 'X') {\n          shipCoords.push([ship.startCoordinates[0] + i, ship.startCoordinates[1]]);\n        } else {\n          shipCoords.push([ship.startCoordinates[0], ship.startCoordinates[1] + i]);\n        }\n      }\n      return shipCoords;\n    },\n    determineIfShipIsOnGameboard(length, startCoord, axis) {\n      let isShipOnBoard = true;\n      const shipCoords = this.getAShipsCoordinates(length, startCoord, axis);\n      shipCoords.forEach(coord => {\n        if (coord[0] > 10 || coord[0] < 1 || coord[1] > 10 || coord[1] < 1) {\n          isShipOnBoard = false;\n        }\n      });\n      return isShipOnBoard;\n    },\n    determineIfShipIsOnAnotherShip(length, startCoord, axis) {\n      let isShipOnAnotherShip = false;\n      const shipCoords = this.getAShipsCoordinates(length, startCoord, axis);\n      const createdShipCoords = this.getAllShipCoords().flat();\n      for (let i = 0; i < shipCoords.length; i += 1) {\n        for (let j = 0; j < createdShipCoords.length; j += 1) {\n          if (shipCoords[i][0] === createdShipCoords[j][0] && shipCoords[i][1] === createdShipCoords[j][1] || shipCoords[i][0] === createdShipCoords[j][0] + 1 && shipCoords[i][1] === createdShipCoords[j][1] || shipCoords[i][0] === createdShipCoords[j][0] - 1 && shipCoords[i][1] === createdShipCoords[j][1] || shipCoords[i][0] === createdShipCoords[j][0] && shipCoords[i][1] === createdShipCoords[j][1] + 1 || shipCoords[i][0] === createdShipCoords[j][0] && shipCoords[i][1] === createdShipCoords[j][1] - 1) {\n            isShipOnAnotherShip = true;\n            break;\n          }\n        }\n      }\n      return isShipOnAnotherShip;\n    },\n    getAShipsCoordinates(length, startCoord, axis) {\n      const shipCoords = [];\n      for (let i = 0; i <= length; i += 1) {\n        if (axis === 'X') {\n          shipCoords.push([startCoord[0] + i, startCoord[1]]);\n        } else {\n          shipCoords.push([startCoord[0], startCoord[1] + i]);\n        }\n      }\n      return shipCoords;\n    },\n    determineIfArrayIsInArrayOfArrays(inputArr, arr) {\n      let inputArrIsInArr = false;\n      arr.forEach(value => {\n        if (value[0] === inputArr[0] && value[1] === inputArr[1]) inputArrIsInArr = !inputArrIsInArr;\n      });\n      return inputArrIsInArr;\n    },\n    createGameboardHTML(name) {\n      let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      let width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n      const gameboardParent = document.createElement('div');\n      gameboardParent.classList.add(`gameboard-parent-${name}`, 'gameboard-parent');\n      for (let i = 10; i >= height - (height - 1); i -= 1) {\n        for (let j = 1; j <= width; j += 1) {\n          const gameboardElement = document.createElement('div');\n          gameboardElement.classList.add('gameboard-element', `gameboard-element-${name}`);\n          gameboardElement.setAttribute('data-X-coord', j);\n          gameboardElement.setAttribute('data-Y-coord', i);\n          if (i === 1) {\n            gameboardElement.classList.add('gameboard-element-bottom-row');\n          }\n          if (j === 10) {\n            gameboardElement.classList.add('gameboard-element-right-row');\n          }\n          gameboardParent.insertAdjacentElement('beforeend', gameboardElement);\n        }\n      }\n      return gameboardParent;\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/gameboard.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addEventlistenersToPlayerGameboard\": () => (/* binding */ addEventlistenersToPlayerGameboard),\n/* harmony export */   \"addGameboardToDOMForPlayer\": () => (/* binding */ addGameboardToDOMForPlayer),\n/* harmony export */   \"addHiddenClassToElement\": () => (/* binding */ addHiddenClassToElement),\n/* harmony export */   \"hideShipsOnGameboard\": () => (/* binding */ hideShipsOnGameboard),\n/* harmony export */   \"mutatePlayerGameboardAfterAttack\": () => (/* binding */ mutatePlayerGameboardAfterAttack),\n/* harmony export */   \"removeEventlistenersToPlayerGameboard\": () => (/* binding */ removeEventlistenersToPlayerGameboard),\n/* harmony export */   \"showShipsOnGameboard\": () => (/* binding */ showShipsOnGameboard)\n/* harmony export */ });\n/* harmony import */ var _gameLoop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameLoop.js */ \"./src/gameLoop.js\");\n\nconst player1NameInput = document.querySelector('#player1');\nconst player2NameInput = document.querySelector('#player2');\nconst startGameWithAIBtn = document.querySelector('.start-game-AI-btn');\nconst startGameWithPlayerBtn = document.querySelector('.start-game-player-btn');\nfunction addGameboardToDOMForPlayer(gameboard) {\n  document.querySelector('main').insertAdjacentElement('beforeend', gameboard);\n}\nfunction addEventlistenersToPlayerGameboard(player, func) {\n  document.querySelectorAll(`.gameboard-element-${player.name}`).forEach(element => {\n    element.addEventListener('click', e => {\n      func(e, player);\n    });\n  });\n}\nfunction removeEventlistenersToPlayerGameboard() {\n  const oldBody = document.body;\n  const newBody = oldBody.cloneNode(true);\n  oldBody.parentNode.replaceChild(newBody, oldBody);\n}\nfunction showShipsOnGameboard(allShipCoords) {\n  allShipCoords.forEach(shipCoords => {\n    shipCoords.forEach(coord => {\n      const shipElementGrid = document.querySelector(`[data-x-coord=\"${coord[0]}\"][data-y-coord=\"${coord[1]}\"]`);\n      shipElementGrid.classList.add('ship-shown');\n    });\n  });\n}\nfunction hideShipsOnGameboard(allShipCoords) {\n  allShipCoords.forEach(shipCoords => {\n    shipCoords.forEach(coord => {\n      const shipElementGrid = document.querySelector(`[data-x-coord=\"${coord[0]}\"][data-y-coord=\"${coord[1]}\"]`);\n      shipElementGrid.classList.add('ship-hidden');\n    });\n  });\n}\nfunction mutatePlayerGameboardAfterAttack(player, shot, attackResult) {\n  const gameboard = document.querySelector(`.gameboard-parent-${player.name}`);\n  const attackedGridElement = gameboard.querySelector(`[data-x-coord=\"${shot[0]}\"][data-y-coord=\"${shot[1]}\"]`);\n  if (attackResult.isHit) {\n    attackedGridElement.textContent = 'X';\n  } else {\n    attackedGridElement.style.background = 'red';\n  }\n}\nfunction addHiddenClassToElement(element) {\n  element.classList.add('hidden');\n}\nstartGameWithAIBtn.addEventListener('click', () => {\n  (0,_gameLoop_js__WEBPACK_IMPORTED_MODULE_0__.setUpPlayers)(player1NameInput.value, player2NameInput.value, true);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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V0FBVyxHQUFHLEdBQUc7RUFDdkMsQ0FBQyxNQUFNO0lBQ0xGLG1CQUFtQixDQUFDRyxLQUFLLENBQUNDLFVBQVUsR0FBRyxLQUFLO0VBQzlDO0FBQ0Y7QUFFTyxTQUFTQyx1QkFBdUJBLENBQUMxQixPQUFPLEVBQUU7RUFDL0NBLE9BQU8sQ0FBQ2UsU0FBUyxDQUFDQyxHQUFHLENBQUMsUUFBUSxDQUFDO0FBQ2pDO0FBRUEzQixrQkFBa0IsQ0FBQ1ksZ0JBQWdCLENBQUMsT0FBTyxFQUFFLE1BQU07RUFDakRqQiwwREFBWSxDQUFDQyxnQkFBZ0IsQ0FBQzBDLEtBQUssRUFBRXZDLGdCQUFnQixDQUFDdUMsS0FBSyxFQUFFLElBQUksQ0FBQztBQUNwRSxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2V0VXBQbGF5ZXJzIH0gZnJvbSAnLi9nYW1lTG9vcC5qcyc7XG5cbmNvbnN0IHBsYXllcjFOYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcGxheWVyMScpO1xuY29uc3QgcGxheWVyMk5hbWVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwbGF5ZXIyJyk7XG5jb25zdCBzdGFydEdhbWVXaXRoQUlCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3RhcnQtZ2FtZS1BSS1idG4nKTtcbmNvbnN0IHN0YXJ0R2FtZVdpdGhQbGF5ZXJCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3RhcnQtZ2FtZS1wbGF5ZXItYnRuJyk7XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRHYW1lYm9hcmRUb0RPTUZvclBsYXllcihnYW1lYm9hcmQpIHtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbWFpbicpLmluc2VydEFkamFjZW50RWxlbWVudCgnYmVmb3JlZW5kJywgZ2FtZWJvYXJkKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEV2ZW50bGlzdGVuZXJzVG9QbGF5ZXJHYW1lYm9hcmQocGxheWVyLCBmdW5jKSB7XG4gIGRvY3VtZW50XG4gICAgLnF1ZXJ5U2VsZWN0b3JBbGwoYC5nYW1lYm9hcmQtZWxlbWVudC0ke3BsYXllci5uYW1lfWApXG4gICAgLmZvckVhY2goKGVsZW1lbnQpID0+IHtcbiAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICBmdW5jKGUsIHBsYXllcik7XG4gICAgICB9KTtcbiAgICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUV2ZW50bGlzdGVuZXJzVG9QbGF5ZXJHYW1lYm9hcmQoKSB7XG4gIGNvbnN0IG9sZEJvZHkgPSBkb2N1bWVudC5ib2R5O1xuICBjb25zdCBuZXdCb2R5ID0gb2xkQm9keS5jbG9uZU5vZGUodHJ1ZSk7XG4gIG9sZEJvZHkucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQobmV3Qm9keSwgb2xkQm9keSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93U2hpcHNPbkdhbWVib2FyZChhbGxTaGlwQ29vcmRzKSB7XG4gIGFsbFNoaXBDb29yZHMuZm9yRWFjaCgoc2hpcENvb3JkcykgPT4ge1xuICAgIHNoaXBDb29yZHMuZm9yRWFjaCgoY29vcmQpID0+IHtcbiAgICAgIGNvbnN0IHNoaXBFbGVtZW50R3JpZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgIGBbZGF0YS14LWNvb3JkPVwiJHtjb29yZFswXX1cIl1bZGF0YS15LWNvb3JkPVwiJHtjb29yZFsxXX1cIl1gXG4gICAgICApO1xuICAgICAgc2hpcEVsZW1lbnRHcmlkLmNsYXNzTGlzdC5hZGQoJ3NoaXAtc2hvd24nKTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoaWRlU2hpcHNPbkdhbWVib2FyZChhbGxTaGlwQ29vcmRzKSB7XG4gIGFsbFNoaXBDb29yZHMuZm9yRWFjaCgoc2hpcENvb3JkcykgPT4ge1xuICAgIHNoaXBDb29yZHMuZm9yRWFjaCgoY29vcmQpID0+IHtcbiAgICAgIGNvbnN0IHNoaXBFbGVtZW50R3JpZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgIGBbZGF0YS14LWNvb3JkPVwiJHtjb29yZFswXX1cIl1bZGF0YS15LWNvb3JkPVwiJHtjb29yZFsxXX1cIl1gXG4gICAgICApO1xuICAgICAgc2hpcEVsZW1lbnRHcmlkLmNsYXNzTGlzdC5hZGQoJ3NoaXAtaGlkZGVuJyk7XG4gICAgfSk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbXV0YXRlUGxheWVyR2FtZWJvYXJkQWZ0ZXJBdHRhY2socGxheWVyLCBzaG90LCBhdHRhY2tSZXN1bHQpIHtcbiAgY29uc3QgZ2FtZWJvYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmdhbWVib2FyZC1wYXJlbnQtJHtwbGF5ZXIubmFtZX1gKTtcbiAgY29uc3QgYXR0YWNrZWRHcmlkRWxlbWVudCA9IGdhbWVib2FyZC5xdWVyeVNlbGVjdG9yKFxuICAgIGBbZGF0YS14LWNvb3JkPVwiJHtzaG90WzBdfVwiXVtkYXRhLXktY29vcmQ9XCIke3Nob3RbMV19XCJdYFxuICApO1xuXG4gIGlmIChhdHRhY2tSZXN1bHQuaXNIaXQpIHtcbiAgICBhdHRhY2tlZEdyaWRFbGVtZW50LnRleHRDb250ZW50ID0gJ1gnO1xuICB9IGVsc2Uge1xuICAgIGF0dGFja2VkR3JpZEVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZCA9ICdyZWQnO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRIaWRkZW5DbGFzc1RvRWxlbWVudChlbGVtZW50KSB7XG4gIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG59XG5cbnN0YXJ0R2FtZVdpdGhBSUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgc2V0VXBQbGF5ZXJzKHBsYXllcjFOYW1lSW5wdXQudmFsdWUsIHBsYXllcjJOYW1lSW5wdXQudmFsdWUsIHRydWUpO1xufSk7XG4iXSwibmFtZXMiOlsic2V0VXBQbGF5ZXJzIiwicGxheWVyMU5hbWVJbnB1dCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInBsYXllcjJOYW1lSW5wdXQiLCJzdGFydEdhbWVXaXRoQUlCdG4iLCJzdGFydEdhbWVXaXRoUGxheWVyQnRuIiwiYWRkR2FtZWJvYXJkVG9ET01Gb3JQbGF5ZXIiLCJnYW1lYm9hcmQiLCJpbnNlcnRBZGphY2VudEVsZW1lbnQiLCJhZGRFdmVudGxpc3RlbmVyc1RvUGxheWVyR2FtZWJvYXJkIiwicGxheWVyIiwiZnVuYyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJuYW1lIiwiZm9yRWFjaCIsImVsZW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInJlbW92ZUV2ZW50bGlzdGVuZXJzVG9QbGF5ZXJHYW1lYm9hcmQiLCJvbGRCb2R5IiwiYm9keSIsIm5ld0JvZHkiLCJjbG9uZU5vZGUiLCJwYXJlbnROb2RlIiwicmVwbGFjZUNoaWxkIiwic2hvd1NoaXBzT25HYW1lYm9hcmQiLCJhbGxTaGlwQ29vcmRzIiwic2hpcENvb3JkcyIsImNvb3JkIiwic2hpcEVsZW1lbnRHcmlkIiwiY2xhc3NMaXN0IiwiYWRkIiwiaGlkZVNoaXBzT25HYW1lYm9hcmQiLCJtdXRhdGVQbGF5ZXJHYW1lYm9hcmRBZnRlckF0dGFjayIsInNob3QiLCJhdHRhY2tSZXN1bHQiLCJhdHRhY2tlZEdyaWRFbGVtZW50IiwiaXNIaXQiLCJ0ZXh0Q29udGVudCIsInN0eWxlIiwiYmFja2dyb3VuZCIsImFkZEhpZGRlbkNsYXNzVG9FbGVtZW50IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Player\": () => (/* binding */ Player)\n/* harmony export */ });\n/* harmony import */ var _gameboard_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameboard.js */ \"./src/gameboard.js\");\n\nfunction Player(name) {\n  let isComputer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return {\n    name,\n    isComputer,\n    didLastShotHit: false,\n    lastShotCoords: null,\n    possibleShotsIfLastHit: null,\n    firstHitCoords: null,\n    hitAxis: null,\n    hitDirection: null,\n    isMyTurn: null,\n    gameboard: new _gameboard_js__WEBPACK_IMPORTED_MODULE_0__.Gameboard(),\n    attackEnemy(attackCoords, enemyPlayer) {\n      const attackResponse = enemyPlayer.gameboard.receiveAttack(attackCoords);\n      if (attackResponse === null) return null;\n      if (attackResponse.isHit) {\n        this.didLastShotHit = true;\n      } else {\n        this.didLastShotHit = false;\n      }\n      this.lastShotCoords = attackCoords;\n      if (attackResponse.didSink) {\n        this.mutatePlayerObjectAfterSinkingShip();\n      }\n      return attackResponse;\n    },\n    placeShipsRandomly() {\n      for (let i = 5; i >= 1; i -= 1) {\n        const length = i;\n        let startCoord = this.calculateRandomCoords();\n        const axis = this.calculateRandomAxis();\n        while (!this.gameboard.determineIfShipIsOnGameboard(length, startCoord, axis) || this.gameboard.determineIfShipIsOnAnotherShip(length, startCoord, axis)) {\n          startCoord = this.calculateRandomCoords();\n        }\n        switch (i) {\n          case 5:\n            this.gameboard.placeShip(length, this.name, 'Carrier', startCoord, axis);\n            break;\n          case 4:\n            this.gameboard.placeShip(length, this.name, 'Battleship', startCoord, axis);\n            break;\n          case 3:\n            this.gameboard.placeShip(length, this.name, 'Cruiser', startCoord, axis);\n            break;\n          case 2:\n            this.gameboard.placeShip(length + 1, this.name, 'Submarine', startCoord, axis);\n            break;\n          case 1:\n            this.gameboard.placeShip(length + 1, this.name, 'Destroyer', startCoord, axis);\n            break;\n          default:\n            console.log('shit');\n        }\n      }\n    },\n    computerShot(enemyPlayer) {\n      if (!this.isComputer) return;\n      let nextShot;\n      console.log(this);\n      if (this.hitAxis !== null && this.hitDirection !== null && !this.didLastShotHit) {\n        console.log('Attacking ship if end is reached but not sunk');\n        nextShot = this.shotIfEndOfShipButNotSunk();\n        if (this.isNextShotAlreadyDone(nextShot, enemyPlayer)) {\n          nextShot = this.shotIfLookingForSecondHit(enemyPlayer);\n        }\n        const attackResponse = this.attackEnemy(nextShot, enemyPlayer);\n        return {\n          nextShot,\n          attackResponse\n        };\n      }\n      if (this.hitAxis !== null && this.hitDirection !== null && this.didLastShotHit) {\n        console.log('Attacking ship on axis and direction');\n        nextShot = this.shotIfShipIsHitTwice(enemyPlayer);\n        const attackResponse = this.attackEnemy(nextShot, enemyPlayer);\n        return {\n          nextShot,\n          attackResponse\n        };\n      }\n      if (this.didLastShotHit || this.possibleShotsIfLastHit !== null) {\n        console.log('Attacking on search pattern');\n        if (this.possibleShotsIfLastHit === null) {\n          this.possibleShotsIfLastHit = [[this.lastShotCoords[0] + 1, this.lastShotCoords[1]], [this.lastShotCoords[0] - 1, this.lastShotCoords[1]], [this.lastShotCoords[0], this.lastShotCoords[1] + 1], [this.lastShotCoords[0], this.lastShotCoords[1] - 1]].filter(value => value[0] > 0 && value[0] < 11 && value[1] > 0 && value[1] < 11);\n        }\n        nextShot = this.shotIfLookingForSecondHit(enemyPlayer);\n        const attackResponse = this.attackEnemy(nextShot, enemyPlayer);\n        if (attackResponse.isHit) this.mutatePlayerObjectOnHit();\n        return {\n          nextShot,\n          attackResponse\n        };\n      }\n\n      // * No hit, no ship in sinking, random shot\n      if (!this.didLastShotHit && this.possibleShotsIfLastHit === null) {\n        console.log('RANDOM SHOT');\n        nextShot = this.randomShot(enemyPlayer);\n        const attackResponse = this.attackEnemy(nextShot, enemyPlayer);\n        return {\n          nextShot,\n          attackResponse\n        };\n      }\n    },\n    shotIfEndOfShipButNotSunk() {\n      let nextShot;\n      if (this.hitDirection === 'positive') {\n        this.hitDirection = 'negative';\n      } else if (this.hitDirection === 'negative') {\n        this.hitDirection = 'positive';\n      }\n      if (this.hitAxis === 'X') {\n        if (this.hitDirection === 'positive') {\n          nextShot = [this.firstHitCoords[0] + 1, this.firstHitCoords[1]];\n        } else if (this.hitDirection === 'negative') {\n          nextShot = [this.firstHitCoords[0] - 1, this.firstHitCoords[1]];\n        }\n      } else if (this.hitAxis === 'Y') {\n        if (this.hitDirection === 'positive') {\n          nextShot = [this.firstHitCoords[0], this.firstHitCoords[1] + 1];\n        } else if (this.hitDirection === 'negative') {\n          nextShot = [this.firstHitCoords[0], this.firstHitCoords[1] - 1];\n        }\n      }\n      return nextShot;\n    },\n    shotIfShipIsHitTwice(enemyPlayer) {\n      let nextShot;\n      if (this.hitAxis === 'X') {\n        if (this.hitDirection === 'positive') {\n          nextShot = [this.lastShotCoords[0] + 1, this.lastShotCoords[1]];\n        } else if (this.hitDirection === 'negative') {\n          nextShot = [this.lastShotCoords[0] - 1, this.lastShotCoords[1]];\n        }\n      } else if (this.hitAxis === 'Y') {\n        if (this.hitDirection === 'positive') {\n          nextShot = [this.lastShotCoords[0], this.lastShotCoords[1] + 1];\n        } else if (this.hitDirection === 'negative') {\n          nextShot = [this.lastShotCoords[0], this.lastShotCoords[1] - 1];\n        }\n      }\n      if (this.isNextShotAlreadyDone(nextShot, enemyPlayer)) {\n        nextShot = this.shotIfEndOfShipButNotSunk();\n      }\n      if (nextShot[0] < 1 || nextShot[0] > 10 || nextShot[1] < 1 || nextShot[1] > 10) {\n        nextShot = this.shotIfLookingForSecondHit(enemyPlayer);\n      }\n      return nextShot;\n    },\n    shotIfLookingForSecondHit(enemyPlayer) {\n      let nextShot;\n      if (this.firstHitCoords === null) this.firstHitCoords = this.lastShotCoords;\n      if (this.possibleShotsIfLastHit.length === 0) {\n        nextShot = this.randomShot();\n        return nextShot;\n      }\n      nextShot = this.possibleShotsIfLastHit.splice(Math.floor(Math.random() * this.possibleShotsIfLastHit.length), 1);\n      while (this.isNextShotAlreadyDone(nextShot[0], enemyPlayer)) {\n        nextShot = this.possibleShotsIfLastHit.splice(Math.floor(Math.random() * this.possibleShotsIfLastHit.length), 1);\n      }\n      return nextShot[0];\n    },\n    randomShot(enemyPlayer) {\n      let nextShot = this.calculateNextShotCoords();\n      while (this.isNextShotAlreadyDone(nextShot, enemyPlayer)) {\n        nextShot = this.calculateNextShotCoords();\n      }\n      return nextShot;\n    },\n    mutatePlayerObjectAfterSinkingShip() {\n      this.didLastShotHit = false;\n      this.possibleShotsIfLastHit = null;\n      this.firstHitCoords = null;\n      this.hitAxis = null;\n      this.hitDirection = null;\n    },\n    mutatePlayerObjectOnHit() {\n      console.log('MUTATING OBJECT');\n      if (this.didLastShotHit) {\n        const hitDirData = [this.firstHitCoords[0] - this.lastShotCoords[0], this.firstHitCoords[1] - this.lastShotCoords[1]];\n        if (hitDirData[0] !== 0) {\n          this.hitAxis = 'X';\n        } else {\n          this.hitAxis = 'Y';\n        }\n        if (hitDirData[0] === -1 || hitDirData[1] === -1) {\n          this.hitDirection = 'positive';\n        } else {\n          this.hitDirection = 'negative';\n        }\n      }\n    },\n    calculateNextShotCoords() {\n      return [this.getRandomNumBetween1And10(), this.getRandomNumBetween1And10()];\n    },\n    calculateRandomCoords() {\n      return [this.getRandomNumBetween1And10(), this.getRandomNumBetween1And10()];\n    },\n    calculateRandomAxis() {\n      return Math.floor(Math.random() * 2) ? 'X' : 'Y';\n    },\n    isNextShotAlreadyDone(shotCoords, enemyPlayer) {\n      let isShotAlreadyDone = false;\n      for (let i = 0; i < enemyPlayer.gameboard.missedHits.length; i += 1) {\n        if (enemyPlayer.gameboard.missedHits[i][0] === shotCoords[0] && enemyPlayer.gameboard.missedHits[i][1] === shotCoords[1]) {\n          isShotAlreadyDone = true;\n          break;\n        }\n        continue;\n      }\n      return isShotAlreadyDone;\n    },\n    getRandomNumBetween1And10() {\n      return Math.floor(Math.random() * 10) + 1;\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/player.js\n");

/***/ }),

/***/ "./src/ships.js":
/*!**********************!*\
  !*** ./src/ships.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ship\": () => (/* binding */ Ship)\n/* harmony export */ });\nfunction Ship(length, team, type, coordinates, axis) {\n  return {\n    team,\n    type,\n    id: `${team}${type}`,\n    length,\n    startCoordinates: coordinates,\n    axis,\n    numberOfHits: 0,\n    hit() {\n      this.numberOfHits += 1;\n    },\n    isSunk() {\n      if (this.numberOfHits >= length) return true;\n      return false;\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hpcHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLElBQUlBLENBQUNDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLFdBQVcsRUFBRUMsSUFBSSxFQUFFO0VBQzFELE9BQU87SUFDTEgsSUFBSTtJQUNKQyxJQUFJO0lBQ0pHLEVBQUUsRUFBRyxHQUFFSixJQUFLLEdBQUVDLElBQUssRUFBQztJQUNwQkYsTUFBTTtJQUNOTSxnQkFBZ0IsRUFBRUgsV0FBVztJQUM3QkMsSUFBSTtJQUNKRyxZQUFZLEVBQUUsQ0FBQztJQUNmQyxHQUFHQSxDQUFBLEVBQUc7TUFDSixJQUFJLENBQUNELFlBQVksSUFBSSxDQUFDO0lBQ3hCLENBQUM7SUFDREUsTUFBTUEsQ0FBQSxFQUFHO01BQ1AsSUFBSSxJQUFJLENBQUNGLFlBQVksSUFBSVAsTUFBTSxFQUFFLE9BQU8sSUFBSTtNQUM1QyxPQUFPLEtBQUs7SUFDZDtFQUNGLENBQUM7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc2hpcHMuanM/NWQ1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gU2hpcChsZW5ndGgsIHRlYW0sIHR5cGUsIGNvb3JkaW5hdGVzLCBheGlzKSB7XG4gIHJldHVybiB7XG4gICAgdGVhbSxcbiAgICB0eXBlLFxuICAgIGlkOiBgJHt0ZWFtfSR7dHlwZX1gLFxuICAgIGxlbmd0aCxcbiAgICBzdGFydENvb3JkaW5hdGVzOiBjb29yZGluYXRlcyxcbiAgICBheGlzLFxuICAgIG51bWJlck9mSGl0czogMCxcbiAgICBoaXQoKSB7XG4gICAgICB0aGlzLm51bWJlck9mSGl0cyArPSAxO1xuICAgIH0sXG4gICAgaXNTdW5rKCkge1xuICAgICAgaWYgKHRoaXMubnVtYmVyT2ZIaXRzID49IGxlbmd0aCkgcmV0dXJuIHRydWU7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJTaGlwIiwibGVuZ3RoIiwidGVhbSIsInR5cGUiLCJjb29yZGluYXRlcyIsImF4aXMiLCJpZCIsInN0YXJ0Q29vcmRpbmF0ZXMiLCJudW1iZXJPZkhpdHMiLCJoaXQiLCJpc1N1bmsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ships.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;