/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/gameLoop.js":
/*!*************************!*\
  !*** ./src/gameLoop.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setUpPlayers\": () => (/* binding */ setUpPlayers),\n/* harmony export */   \"startGameLoop\": () => (/* binding */ startGameLoop)\n/* harmony export */ });\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player.js */ \"./src/player.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"./src/index.js\");\n\n\nlet player1 = null;\nlet player2 = null;\nfunction setUpPlayers(Player1, Player2, isPlayer2Computer) {\n  let player2Name = Player2;\n  if (!Player1 || !Player2 && !isPlayer2Computer) return;\n  if (player1 !== null || player2 !== null) return;\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addHiddenClassToElement)(document.querySelector('.gamestart-form'));\n  if (isPlayer2Computer) player2Name = 'AI';\n  player1 = new _player_js__WEBPACK_IMPORTED_MODULE_0__.Player(Player1);\n  player2 = new _player_js__WEBPACK_IMPORTED_MODULE_0__.Player(player2Name, isPlayer2Computer);\n  const player1GameboardHTML = player1.gameboard.createGameboardHTML(player1.name);\n  const player1ShipTrackerHTML = player1.gameboard.createShipTrackingHTML(player1.name);\n  const player2Gameboard = player2.gameboard.createGameboardHTML(player2.name);\n  const player2ShipTrackerHTML = player2.gameboard.createShipTrackingHTML(player2.name);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createPlayerAreaInDOM)(player1);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addGameboardToDOMForPlayer)(player1, player1GameboardHTML);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addShipTrackerToDOMForPlayer)(player1, player1ShipTrackerHTML);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createPlayerAreaInDOM)(player2);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addGameboardToDOMForPlayer)(player2, player2Gameboard);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addShipTrackerToDOMForPlayer)(player2, player2ShipTrackerHTML);\n  if (isPlayer2Computer) player2.placeShipsRandomly();\n}\nfunction startGameLoop() {\n  if (player1.gameboard.ships.length === 5 && player2.gameboard.ships.length === 5) {\n    gameLoop();\n    return true;\n  }\n  return false;\n}\nfunction gameLoop() {\n  takeTurns();\n  if (player2.isComputer) {\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addEventlistenersToPlayerGameboard)(player2, humanShot);\n  } else {\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addEventlistenersToPlayerGameboard)(player2, humanShot);\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addEventlistenersToPlayerGameboard)(player1, humanShot);\n  }\n}\nfunction takeTurns() {\n  if (!player1 || !player2) return;\n  if (player1.isMyTurn === null && player2.isMyTurn === null) {\n    player1.isMyTurn = true;\n    player2.isMyTurn = false;\n  } else {\n    player1.isMyTurn = !player1.isMyTurn;\n    player2.isMyTurn = !player2.isMyTurn;\n  }\n  if (!player1.isComputer && !player2.isComputer) {\n    if (player1.isMyTurn) {\n      console.log('Player 1 ship hiding');\n      (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.hideShipsOnGameboard)(player2);\n      setTimeout(() => {\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.showShipsOnGameboard)(player1);\n      }, 2000);\n    }\n    if (player2.isMyTurn) {\n      console.log('Player 2 ship hiding');\n      (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.hideShipsOnGameboard)(player1);\n      setTimeout(() => {\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.showShipsOnGameboard)(player2);\n      }, 2000);\n    }\n  }\n  if (player2.isComputer) {\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.showShipsOnGameboard)(player1);\n  }\n  const playerHasTurn = player1.isMyTurn ? player1 : player2;\n  setTimeout(() => {\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.updateNarrationArea)(`${playerHasTurn.name} is aiming...`);\n  }, 0);\n}\nfunction checkIfGameEnded() {\n  if (player1.gameboard.areAllShipsSunk()) {\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.removeEventlistenersToPlayerGameboard)(player2, humanShot);\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.showEndOfGameScreen)(player2.name);\n  }\n  if (player2.gameboard.areAllShipsSunk()) {\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.removeEventlistenersToPlayerGameboard)(player2, humanShot);\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.showEndOfGameScreen)(player1.name);\n  }\n  if (player1.gameboard.areAllShipsSunk() || player2.gameboard.areAllShipsSunk()) {\n    player1 = null;\n    player2 = null;\n  }\n}\nfunction humanShot(e, enemyPlayer) {\n  const player = enemyPlayer === player1 ? player2 : player1;\n  if (!player.isMyTurn) return;\n  const shot = [Number(e.currentTarget.dataset.xCoord), Number(e.currentTarget.dataset.yCoord)];\n  const attackResult = player.attackEnemy(shot, enemyPlayer);\n  if (attackResult === null) {\n    console.log('Shot already taken');\n    return;\n  }\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.mutatePlayerGameboardAfterAttack)(enemyPlayer, shot, attackResult);\n  checkIfGameEnded();\n  takeTurns();\n  if (player2.isComputer) {\n    setTimeout(() => {\n      computerShot();\n    }, Math.floor(Math.random() * 750));\n  }\n}\nasync function computerShot() {\n  if (!player2 || !player2.isComputer || !player2.isMyTurn) return;\n  const computerShotData = player2.computerShot(player1);\n  console.log({\n    compShot: computerShotData.nextShot\n  });\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.mutatePlayerGameboardAfterAttack)(player1, computerShotData.nextShot, computerShotData.attackResponse);\n  checkIfGameEnded();\n  takeTurns();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFNBQVMsRUFBRTtFQUNYLElBQUlyQixPQUFPLENBQUNzQixVQUFVLEVBQUU7SUFDdEJLLFVBQVUsQ0FBQyxNQUFNO01BQ2ZlLFlBQVksRUFBRTtJQUNoQixDQUFDLEVBQUVDLElBQUksQ0FBQ0MsS0FBSyxDQUFDRCxJQUFJLENBQUNFLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDO0VBQ3JDO0FBQ0Y7QUFFQSxlQUFlSCxZQUFZQSxDQUFBLEVBQUc7RUFDNUIsSUFBSSxDQUFDMUMsT0FBTyxJQUFJLENBQUNBLE9BQU8sQ0FBQ3NCLFVBQVUsSUFBSSxDQUFDdEIsT0FBTyxDQUFDd0IsUUFBUSxFQUFFO0VBRTFELE1BQU1zQixnQkFBZ0IsR0FBRzlDLE9BQU8sQ0FBQzBDLFlBQVksQ0FBQzNDLE9BQU8sQ0FBQztFQUN0RDBCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDO0lBQUVxQixRQUFRLEVBQUVELGdCQUFnQixDQUFDRTtFQUFTLENBQUMsQ0FBQztFQUNwRHZELDJFQUFnQyxDQUM5Qk0sT0FBTyxFQUNQK0MsZ0JBQWdCLENBQUNFLFFBQVEsRUFDekJGLGdCQUFnQixDQUFDRyxjQUFjLENBQ2hDO0VBQ0RwQixnQkFBZ0IsRUFBRTtFQUNsQlIsU0FBUyxFQUFFO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2dhbWVMb29wLmpzPzQ0MGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGxheWVyIH0gZnJvbSAnLi9wbGF5ZXIuanMnO1xuaW1wb3J0IHtcbiAgYWRkR2FtZWJvYXJkVG9ET01Gb3JQbGF5ZXIsXG4gIGFkZEhpZGRlbkNsYXNzVG9FbGVtZW50LFxuICBhZGRFdmVudGxpc3RlbmVyc1RvUGxheWVyR2FtZWJvYXJkLFxuICBzaG93U2hpcHNPbkdhbWVib2FyZCxcbiAgaGlkZVNoaXBzT25HYW1lYm9hcmQsXG4gIG11dGF0ZVBsYXllckdhbWVib2FyZEFmdGVyQXR0YWNrLFxuICByZW1vdmVFdmVudGxpc3RlbmVyc1RvUGxheWVyR2FtZWJvYXJkLFxuICBhZGRTaGlwVHJhY2tlclRvRE9NRm9yUGxheWVyLFxuICBjcmVhdGVQbGF5ZXJBcmVhSW5ET00sXG4gIHNob3dFbmRPZkdhbWVTY3JlZW4sXG4gIHVwZGF0ZU5hcnJhdGlvbkFyZWEsXG59IGZyb20gJy4vaW5kZXguanMnO1xuXG5sZXQgcGxheWVyMSA9IG51bGw7XG5sZXQgcGxheWVyMiA9IG51bGw7XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRVcFBsYXllcnMoUGxheWVyMSwgUGxheWVyMiwgaXNQbGF5ZXIyQ29tcHV0ZXIpIHtcbiAgbGV0IHBsYXllcjJOYW1lID0gUGxheWVyMjtcbiAgaWYgKCFQbGF5ZXIxIHx8ICghUGxheWVyMiAmJiAhaXNQbGF5ZXIyQ29tcHV0ZXIpKSByZXR1cm47XG4gIGlmIChwbGF5ZXIxICE9PSBudWxsIHx8IHBsYXllcjIgIT09IG51bGwpIHJldHVybjtcblxuICBhZGRIaWRkZW5DbGFzc1RvRWxlbWVudChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZ2FtZXN0YXJ0LWZvcm0nKSk7XG5cbiAgaWYgKGlzUGxheWVyMkNvbXB1dGVyKSBwbGF5ZXIyTmFtZSA9ICdBSSc7XG4gIHBsYXllcjEgPSBuZXcgUGxheWVyKFBsYXllcjEpO1xuICBwbGF5ZXIyID0gbmV3IFBsYXllcihwbGF5ZXIyTmFtZSwgaXNQbGF5ZXIyQ29tcHV0ZXIpO1xuXG4gIGNvbnN0IHBsYXllcjFHYW1lYm9hcmRIVE1MID0gcGxheWVyMS5nYW1lYm9hcmQuY3JlYXRlR2FtZWJvYXJkSFRNTChcbiAgICBwbGF5ZXIxLm5hbWVcbiAgKTtcbiAgY29uc3QgcGxheWVyMVNoaXBUcmFja2VySFRNTCA9IHBsYXllcjEuZ2FtZWJvYXJkLmNyZWF0ZVNoaXBUcmFja2luZ0hUTUwoXG4gICAgcGxheWVyMS5uYW1lXG4gICk7XG4gIGNvbnN0IHBsYXllcjJHYW1lYm9hcmQgPSBwbGF5ZXIyLmdhbWVib2FyZC5jcmVhdGVHYW1lYm9hcmRIVE1MKHBsYXllcjIubmFtZSk7XG4gIGNvbnN0IHBsYXllcjJTaGlwVHJhY2tlckhUTUwgPSBwbGF5ZXIyLmdhbWVib2FyZC5jcmVhdGVTaGlwVHJhY2tpbmdIVE1MKFxuICAgIHBsYXllcjIubmFtZVxuICApO1xuXG4gIGNyZWF0ZVBsYXllckFyZWFJbkRPTShwbGF5ZXIxKTtcbiAgYWRkR2FtZWJvYXJkVG9ET01Gb3JQbGF5ZXIocGxheWVyMSwgcGxheWVyMUdhbWVib2FyZEhUTUwpO1xuICBhZGRTaGlwVHJhY2tlclRvRE9NRm9yUGxheWVyKHBsYXllcjEsIHBsYXllcjFTaGlwVHJhY2tlckhUTUwpO1xuXG4gIGNyZWF0ZVBsYXllckFyZWFJbkRPTShwbGF5ZXIyKTtcbiAgYWRkR2FtZWJvYXJkVG9ET01Gb3JQbGF5ZXIocGxheWVyMiwgcGxheWVyMkdhbWVib2FyZCk7XG4gIGFkZFNoaXBUcmFja2VyVG9ET01Gb3JQbGF5ZXIocGxheWVyMiwgcGxheWVyMlNoaXBUcmFja2VySFRNTCk7XG5cbiAgaWYgKGlzUGxheWVyMkNvbXB1dGVyKSBwbGF5ZXIyLnBsYWNlU2hpcHNSYW5kb21seSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RhcnRHYW1lTG9vcCgpIHtcbiAgaWYgKFxuICAgIHBsYXllcjEuZ2FtZWJvYXJkLnNoaXBzLmxlbmd0aCA9PT0gNSAmJlxuICAgIHBsYXllcjIuZ2FtZWJvYXJkLnNoaXBzLmxlbmd0aCA9PT0gNVxuICApIHtcbiAgICBnYW1lTG9vcCgpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gZ2FtZUxvb3AoKSB7XG4gIHRha2VUdXJucygpO1xuICBpZiAocGxheWVyMi5pc0NvbXB1dGVyKSB7XG4gICAgYWRkRXZlbnRsaXN0ZW5lcnNUb1BsYXllckdhbWVib2FyZChwbGF5ZXIyLCBodW1hblNob3QpO1xuICB9IGVsc2Uge1xuICAgIGFkZEV2ZW50bGlzdGVuZXJzVG9QbGF5ZXJHYW1lYm9hcmQocGxheWVyMiwgaHVtYW5TaG90KTtcbiAgICBhZGRFdmVudGxpc3RlbmVyc1RvUGxheWVyR2FtZWJvYXJkKHBsYXllcjEsIGh1bWFuU2hvdCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gdGFrZVR1cm5zKCkge1xuICBpZiAoIXBsYXllcjEgfHwgIXBsYXllcjIpIHJldHVybjtcbiAgaWYgKHBsYXllcjEuaXNNeVR1cm4gPT09IG51bGwgJiYgcGxheWVyMi5pc015VHVybiA9PT0gbnVsbCkge1xuICAgIHBsYXllcjEuaXNNeVR1cm4gPSB0cnVlO1xuICAgIHBsYXllcjIuaXNNeVR1cm4gPSBmYWxzZTtcbiAgfSBlbHNlIHtcbiAgICBwbGF5ZXIxLmlzTXlUdXJuID0gIXBsYXllcjEuaXNNeVR1cm47XG4gICAgcGxheWVyMi5pc015VHVybiA9ICFwbGF5ZXIyLmlzTXlUdXJuO1xuICB9XG4gIGlmICghcGxheWVyMS5pc0NvbXB1dGVyICYmICFwbGF5ZXIyLmlzQ29tcHV0ZXIpIHtcbiAgICBpZiAocGxheWVyMS5pc015VHVybikge1xuICAgICAgY29uc29sZS5sb2coJ1BsYXllciAxIHNoaXAgaGlkaW5nJyk7XG4gICAgICBoaWRlU2hpcHNPbkdhbWVib2FyZChwbGF5ZXIyKTtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBzaG93U2hpcHNPbkdhbWVib2FyZChwbGF5ZXIxKTtcbiAgICAgIH0sIDIwMDApO1xuICAgIH1cbiAgICBpZiAocGxheWVyMi5pc015VHVybikge1xuICAgICAgY29uc29sZS5sb2coJ1BsYXllciAyIHNoaXAgaGlkaW5nJyk7XG4gICAgICBoaWRlU2hpcHNPbkdhbWVib2FyZChwbGF5ZXIxKTtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBzaG93U2hpcHNPbkdhbWVib2FyZChwbGF5ZXIyKTtcbiAgICAgIH0sIDIwMDApO1xuICAgIH1cbiAgfVxuICBpZiAocGxheWVyMi5pc0NvbXB1dGVyKSB7XG4gICAgc2hvd1NoaXBzT25HYW1lYm9hcmQocGxheWVyMSk7XG4gIH1cblxuICBjb25zdCBwbGF5ZXJIYXNUdXJuID0gcGxheWVyMS5pc015VHVybiA/IHBsYXllcjEgOiBwbGF5ZXIyO1xuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICB1cGRhdGVOYXJyYXRpb25BcmVhKGAke3BsYXllckhhc1R1cm4ubmFtZX0gaXMgYWltaW5nLi4uYCk7XG4gIH0sIDApO1xufVxuXG5mdW5jdGlvbiBjaGVja0lmR2FtZUVuZGVkKCkge1xuICBpZiAocGxheWVyMS5nYW1lYm9hcmQuYXJlQWxsU2hpcHNTdW5rKCkpIHtcbiAgICByZW1vdmVFdmVudGxpc3RlbmVyc1RvUGxheWVyR2FtZWJvYXJkKHBsYXllcjIsIGh1bWFuU2hvdCk7XG4gICAgc2hvd0VuZE9mR2FtZVNjcmVlbihwbGF5ZXIyLm5hbWUpO1xuICB9XG4gIGlmIChwbGF5ZXIyLmdhbWVib2FyZC5hcmVBbGxTaGlwc1N1bmsoKSkge1xuICAgIHJlbW92ZUV2ZW50bGlzdGVuZXJzVG9QbGF5ZXJHYW1lYm9hcmQocGxheWVyMiwgaHVtYW5TaG90KTtcbiAgICBzaG93RW5kT2ZHYW1lU2NyZWVuKHBsYXllcjEubmFtZSk7XG4gIH1cbiAgaWYgKFxuICAgIHBsYXllcjEuZ2FtZWJvYXJkLmFyZUFsbFNoaXBzU3VuaygpIHx8XG4gICAgcGxheWVyMi5nYW1lYm9hcmQuYXJlQWxsU2hpcHNTdW5rKClcbiAgKSB7XG4gICAgcGxheWVyMSA9IG51bGw7XG4gICAgcGxheWVyMiA9IG51bGw7XG4gIH1cbn1cblxuZnVuY3Rpb24gaHVtYW5TaG90KGUsIGVuZW15UGxheWVyKSB7XG4gIGNvbnN0IHBsYXllciA9IGVuZW15UGxheWVyID09PSBwbGF5ZXIxID8gcGxheWVyMiA6IHBsYXllcjE7XG4gIGlmICghcGxheWVyLmlzTXlUdXJuKSByZXR1cm47XG4gIGNvbnN0IHNob3QgPSBbXG4gICAgTnVtYmVyKGUuY3VycmVudFRhcmdldC5kYXRhc2V0LnhDb29yZCksXG4gICAgTnVtYmVyKGUuY3VycmVudFRhcmdldC5kYXRhc2V0LnlDb29yZCksXG4gIF07XG4gIGNvbnN0IGF0dGFja1Jlc3VsdCA9IHBsYXllci5hdHRhY2tFbmVteShzaG90LCBlbmVteVBsYXllcik7XG4gIGlmIChhdHRhY2tSZXN1bHQgPT09IG51bGwpIHtcbiAgICBjb25zb2xlLmxvZygnU2hvdCBhbHJlYWR5IHRha2VuJyk7XG4gICAgcmV0dXJuO1xuICB9XG4gIG11dGF0ZVBsYXllckdhbWVib2FyZEFmdGVyQXR0YWNrKGVuZW15UGxheWVyLCBzaG90LCBhdHRhY2tSZXN1bHQpO1xuICBjaGVja0lmR2FtZUVuZGVkKCk7XG4gIHRha2VUdXJucygpO1xuICBpZiAocGxheWVyMi5pc0NvbXB1dGVyKSB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjb21wdXRlclNob3QoKTtcbiAgICB9LCBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA3NTApKTtcbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiBjb21wdXRlclNob3QoKSB7XG4gIGlmICghcGxheWVyMiB8fCAhcGxheWVyMi5pc0NvbXB1dGVyIHx8ICFwbGF5ZXIyLmlzTXlUdXJuKSByZXR1cm47XG5cbiAgY29uc3QgY29tcHV0ZXJTaG90RGF0YSA9IHBsYXllcjIuY29tcHV0ZXJTaG90KHBsYXllcjEpO1xuICBjb25zb2xlLmxvZyh7IGNvbXBTaG90OiBjb21wdXRlclNob3REYXRhLm5leHRTaG90IH0pO1xuICBtdXRhdGVQbGF5ZXJHYW1lYm9hcmRBZnRlckF0dGFjayhcbiAgICBwbGF5ZXIxLFxuICAgIGNvbXB1dGVyU2hvdERhdGEubmV4dFNob3QsXG4gICAgY29tcHV0ZXJTaG90RGF0YS5hdHRhY2tSZXNwb25zZVxuICApO1xuICBjaGVja0lmR2FtZUVuZGVkKCk7XG4gIHRha2VUdXJucygpO1xufVxuIl0sIm5hbWVzIjpbIlBsYXllciIsImFkZEdhbWVib2FyZFRvRE9NRm9yUGxheWVyIiwiYWRkSGlkZGVuQ2xhc3NUb0VsZW1lbnQiLCJhZGRFdmVudGxpc3RlbmVyc1RvUGxheWVyR2FtZWJvYXJkIiwic2hvd1NoaXBzT25HYW1lYm9hcmQiLCJoaWRlU2hpcHNPbkdhbWVib2FyZCIsIm11dGF0ZVBsYXllckdhbWVib2FyZEFmdGVyQXR0YWNrIiwicmVtb3ZlRXZlbnRsaXN0ZW5lcnNUb1BsYXllckdhbWVib2FyZCIsImFkZFNoaXBUcmFja2VyVG9ET01Gb3JQbGF5ZXIiLCJjcmVhdGVQbGF5ZXJBcmVhSW5ET00iLCJzaG93RW5kT2ZHYW1lU2NyZWVuIiwidXBkYXRlTmFycmF0aW9uQXJlYSIsInBsYXllcjEiLCJwbGF5ZXIyIiwic2V0VXBQbGF5ZXJzIiwiUGxheWVyMSIsIlBsYXllcjIiLCJpc1BsYXllcjJDb21wdXRlciIsInBsYXllcjJOYW1lIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicGxheWVyMUdhbWVib2FyZEhUTUwiLCJnYW1lYm9hcmQiLCJjcmVhdGVHYW1lYm9hcmRIVE1MIiwibmFtZSIsInBsYXllcjFTaGlwVHJhY2tlckhUTUwiLCJjcmVhdGVTaGlwVHJhY2tpbmdIVE1MIiwicGxheWVyMkdhbWVib2FyZCIsInBsYXllcjJTaGlwVHJhY2tlckhUTUwiLCJwbGFjZVNoaXBzUmFuZG9tbHkiLCJzdGFydEdhbWVMb29wIiwic2hpcHMiLCJsZW5ndGgiLCJnYW1lTG9vcCIsInRha2VUdXJucyIsImlzQ29tcHV0ZXIiLCJodW1hblNob3QiLCJpc015VHVybiIsImNvbnNvbGUiLCJsb2ciLCJzZXRUaW1lb3V0IiwicGxheWVySGFzVHVybiIsImNoZWNrSWZHYW1lRW5kZWQiLCJhcmVBbGxTaGlwc1N1bmsiLCJlIiwiZW5lbXlQbGF5ZXIiLCJwbGF5ZXIiLCJzaG90IiwiTnVtYmVyIiwiY3VycmVudFRhcmdldCIsImRhdGFzZXQiLCJ4Q29vcmQiLCJ5Q29vcmQiLCJhdHRhY2tSZXN1bHQiLCJhdHRhY2tFbmVteSIsImNvbXB1dGVyU2hvdCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImNvbXB1dGVyU2hvdERhdGEiLCJjb21wU2hvdCIsIm5leHRTaG90IiwiYXR0YWNrUmVzcG9uc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/gameLoop.js\n");

/***/ }),

/***/ "./src/gameboard.js":
/*!**************************!*\
  !*** ./src/gameboard.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Gameboard\": () => (/* binding */ Gameboard)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./src/index.js\");\n/* harmony import */ var _ships_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ships.js */ \"./src/ships.js\");\n\n\nfunction Gameboard() {\n  return {\n    ships: [],\n    missedHits: [],\n    areAllShipsSunk() {\n      const statusOfShips = [];\n      this.ships.forEach(ship => {\n        statusOfShips.push(ship.isSunk());\n      });\n      return statusOfShips.every(status => status === true);\n    },\n    placeShip(length, team, type, coordinates, axis) {\n      this.ships.push(new _ships_js__WEBPACK_IMPORTED_MODULE_1__.Ship(length, team, type, coordinates, axis));\n    },\n    receiveAttack(attackCoords) {\n      if (this.determineIfArrayIsInArrayOfArrays(attackCoords, this.missedHits)) return null;\n      let isHit = false;\n      let didSink = null;\n      let instShip = null;\n      this.ships.forEach(ship => {\n        const shipCoords = this.getShipCoords(ship);\n        for (let i = 0; i < shipCoords.length; i += 1) {\n          if (shipCoords[i][0] === attackCoords[0] && shipCoords[i][1] === attackCoords[1]) {\n            ship.hit();\n            isHit = true;\n            didSink = ship.isSunk();\n            instShip = ship;\n            break;\n          }\n        }\n      });\n      this.missedHits.push(attackCoords);\n      if (didSink) (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.trackSunkenShip)(instShip);\n      return {\n        isHit,\n        didSink\n      };\n    },\n    checkIfPlayerHasTypeOfShip(type) {\n      const shipTypesOnBoard = this.ships.map(ship => ship.type);\n      if (shipTypesOnBoard.includes(type)) {\n        return true;\n      }\n      return false;\n    },\n    getAllShipCoords() {\n      const allShipsCoords = [];\n      this.ships.forEach(ship => {\n        const shipCoords = this.getShipCoords(ship);\n        allShipsCoords.push(shipCoords);\n      });\n      return allShipsCoords;\n    },\n    getShipCoords(ship) {\n      const shipCoords = [];\n      for (let i = 0; i < ship.length; i += 1) {\n        if (ship.axis === 'X') {\n          shipCoords.push([ship.startCoordinates[0] + i, ship.startCoordinates[1]]);\n        } else {\n          shipCoords.push([ship.startCoordinates[0], ship.startCoordinates[1] + i]);\n        }\n      }\n      return shipCoords;\n    },\n    determineIfShipIsOnGameboard(length, startCoord, axis) {\n      let isShipOnBoard = true;\n      const shipCoords = this.getAShipsCoordinates(length, startCoord, axis);\n      shipCoords.forEach(coord => {\n        if (coord[0] > 10 || coord[0] < 1 || coord[1] > 10 || coord[1] < 1) {\n          isShipOnBoard = false;\n        }\n      });\n      return isShipOnBoard;\n    },\n    determineIfShipIsOnAnotherShip(length, startCoord, axis) {\n      let isShipOnAnotherShip = false;\n      const shipCoords = this.getAShipsCoordinates(length, startCoord, axis);\n      const createdShipCoords = this.getAllShipCoords().flat();\n      for (let i = 0; i < shipCoords.length; i += 1) {\n        for (let j = 0; j < createdShipCoords.length; j += 1) {\n          if (shipCoords[i][0] === createdShipCoords[j][0] && shipCoords[i][1] === createdShipCoords[j][1] || shipCoords[i][0] === createdShipCoords[j][0] + 1 && shipCoords[i][1] === createdShipCoords[j][1] || shipCoords[i][0] === createdShipCoords[j][0] - 1 && shipCoords[i][1] === createdShipCoords[j][1] || shipCoords[i][0] === createdShipCoords[j][0] && shipCoords[i][1] === createdShipCoords[j][1] + 1 || shipCoords[i][0] === createdShipCoords[j][0] && shipCoords[i][1] === createdShipCoords[j][1] - 1) {\n            isShipOnAnotherShip = true;\n            break;\n          }\n        }\n      }\n      return isShipOnAnotherShip;\n    },\n    getAShipsCoordinates(length, startCoord, axis) {\n      const shipCoords = [];\n      for (let i = 0; i <= length; i += 1) {\n        if (axis === 'X') {\n          shipCoords.push([startCoord[0] + i, startCoord[1]]);\n        } else {\n          shipCoords.push([startCoord[0], startCoord[1] + i]);\n        }\n      }\n      return shipCoords;\n    },\n    determineIfArrayIsInArrayOfArrays(inputArr, arr) {\n      let inputArrIsInArr = false;\n      arr.forEach(value => {\n        if (value[0] === inputArr[0] && value[1] === inputArr[1]) inputArrIsInArr = !inputArrIsInArr;\n      });\n      return inputArrIsInArr;\n    },\n    createGameboardHTML(name) {\n      let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      let width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n      const gameboardParent = document.createElement('div');\n      gameboardParent.classList.add(`gameboard-parent-${name}`, 'gameboard-parent');\n      for (let i = 10; i >= height - (height - 1); i -= 1) {\n        for (let j = 1; j <= width; j += 1) {\n          const gameboardElement = document.createElement('div');\n          gameboardElement.classList.add('gameboard-element', `gameboard-element-${name}`);\n          gameboardElement.setAttribute('data-X-coord', j);\n          gameboardElement.setAttribute('data-Y-coord', i);\n          if (i === 1) {\n            gameboardElement.classList.add('gameboard-element-bottom-row');\n          }\n          if (j === 10) {\n            gameboardElement.classList.add('gameboard-element-right-row');\n          }\n          gameboardParent.insertAdjacentElement('beforeend', gameboardElement);\n        }\n      }\n      return gameboardParent;\n    },\n    createShipTrackingHTML(name) {\n      if (name === 'AI') {\n        return `\n        <ul class=\"ship-tracking ship-tracking-${name}\">\n        <li class=\"ship carrier carrier-${name}\">Carrier     \n        </li>\n        <li class=\"ship battleship battleship-${name}\">Battleship\n        </li>\n        <li class=\"ship cruiser cruiser-${name}\">Cruiser\n        </li>\n        <li class=\"ship submarine submarine-${name}\">Submarine\n        </li>\n        <li class=\"ship destroyer destroyer-${name}\">Destroyer\n        </li>\n      </ul>\n\n        `;\n      }\n      return `\n        <ul class=\"ship-tracking ship-tracking-${name}\">\n          <li class=\"ship carrier carrier-${name}\">Carrier     \n            <div class=\"draggable carrier-draggable\" data-length=\"5\" data-shipType=\"Carrier\" draggable=\"true\">\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n            </div>\n          </li>\n          <li class=\"ship battleship battleship-${name}\">Battleship\n            <div class=\"draggable battleship-draggable\" data-length=\"4\" data-shipType=\"Battleship\" draggable=\"true\">\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n            </div>\n          </li>\n          <li class=\"ship cruiser cruiser-${name}\">Cruiser\n            <div class=\"draggable cruiser-draggable\" data-length=\"3\" data-shipType=\"Cruiser\" draggable=\"true\">\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n            </div>\n          </li>\n          <li class=\"ship submarine submarine-${name}\">Submarine\n            <div class=\"draggable submarine-draggable\" data-length=\"3\" data-shipType=\"Submarine\" draggable=\"true\">\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n            </div>\n          </li>\n          <li class=\"ship destroyer destroyer-${name}\">Destroyer\n            <div class=\"draggable destroyer-draggable\" data-length=\"2\" data-shipType=\"Destroyer\" draggable=\"true\">\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n            </div>\n          </li>\n        </ul>\n      `;\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/gameboard.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addEventlistenersToPlayerGameboard\": () => (/* binding */ addEventlistenersToPlayerGameboard),\n/* harmony export */   \"addGameboardToDOMForPlayer\": () => (/* binding */ addGameboardToDOMForPlayer),\n/* harmony export */   \"addHiddenClassToElement\": () => (/* binding */ addHiddenClassToElement),\n/* harmony export */   \"addShipTrackerToDOMForPlayer\": () => (/* binding */ addShipTrackerToDOMForPlayer),\n/* harmony export */   \"createPlayerAreaInDOM\": () => (/* binding */ createPlayerAreaInDOM),\n/* harmony export */   \"hideShipsOnGameboard\": () => (/* binding */ hideShipsOnGameboard),\n/* harmony export */   \"mutatePlayerGameboardAfterAttack\": () => (/* binding */ mutatePlayerGameboardAfterAttack),\n/* harmony export */   \"removeEventlistenersToPlayerGameboard\": () => (/* binding */ removeEventlistenersToPlayerGameboard),\n/* harmony export */   \"showEndOfGameScreen\": () => (/* binding */ showEndOfGameScreen),\n/* harmony export */   \"showShipsOnGameboard\": () => (/* binding */ showShipsOnGameboard),\n/* harmony export */   \"trackSunkenShip\": () => (/* binding */ trackSunkenShip),\n/* harmony export */   \"updateNarrationArea\": () => (/* binding */ updateNarrationArea)\n/* harmony export */ });\n/* harmony import */ var _gameLoop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameLoop.js */ \"./src/gameLoop.js\");\n\nconst player1NameInput = document.querySelector('#player1');\nconst player2NameInput = document.querySelector('#player2');\nconst startGameWithAIBtn = document.querySelector('.start-game-AI-btn');\nconst startGameWithPlayerBtn = document.querySelector('.start-game-player-btn');\nconst PLAYER_AREA_CLASS_NAME = 'player-area-';\nfunction createPlayerAreaInDOM(player) {\n  const main = document.querySelector('main');\n  const playerAreaHTMLElement = document.createElement('div');\n  playerAreaHTMLElement.classList.add(`${PLAYER_AREA_CLASS_NAME}${player.name}`, 'player-area');\n  const playerId = document.createElement('h2');\n  playerId.textContent = `${player.name}`;\n  playerAreaHTMLElement.insertAdjacentElement('afterbegin', playerId);\n  const axisBtn = document.createElement('button');\n  axisBtn.setAttribute('data-axis', 'X');\n  axisBtn.classList.add('axis-selector-btn', 'button', 'center');\n  axisBtn.textContent = 'Axis: X';\n  if (!document.querySelector('.axis-selector-btn')) {\n    main.insertAdjacentElement('afterbegin', axisBtn);\n  }\n  axisBtn.addEventListener('click', setAxis);\n  main.insertAdjacentElement('beforeend', playerAreaHTMLElement);\n}\nfunction addGameboardToDOMForPlayer(player, gameboard) {\n  document.querySelector(`.${PLAYER_AREA_CLASS_NAME}${player.name}`).insertAdjacentElement('beforeend', gameboard);\n}\nfunction addShipTrackerToDOMForPlayer(player, tracker) {\n  const playerArea = document.querySelector(`.${PLAYER_AREA_CLASS_NAME}${player.name}`);\n  playerArea.insertAdjacentHTML('beforeend', tracker);\n  const gameboardGrids = playerArea.querySelectorAll('.gameboard-element');\n  const shipDraggables = playerArea.querySelectorAll('.draggable');\n  shipDraggables.forEach(draggable => {\n    draggable.addEventListener('dragstart', shipDragStart);\n  });\n  shipDraggables.forEach(draggable => {\n    draggable.addEventListener('dragend', shipDragEnd);\n  });\n  gameboardGrids.forEach(grid => {\n    grid.addEventListener('dragover', e => {\n      e.preventDefault();\n    });\n  });\n  gameboardGrids.forEach(grid => {\n    grid.addEventListener('drop', e => {\n      dropOnGrid(e, player);\n    });\n  });\n}\nfunction shipDragStart(e) {\n  // !\n  this.classList.toggle('hold');\n  requestAnimationFrame(() => {\n    this.classList.toggle('hidden');\n  });\n  e.dataTransfer.setData('shipLength', this.dataset.length);\n  e.dataTransfer.setData('shipType', this.dataset.shiptype);\n  e.dataTransfer.setData('shipElem', this);\n}\nfunction shipDragEnd(e) {\n  // !\n  console.log(e);\n  this.classList.toggle('hold');\n  this.classList.toggle('hidden');\n}\nfunction dropOnGrid(e, player) {\n  const shipLength = Number(e.dataTransfer.getData('shipLength'));\n  const shiptType = e.dataTransfer.getData('shipType');\n  const axisBtn = document.querySelector('.axis-selector-btn');\n  const {\n    axis\n  } = axisBtn.dataset;\n  const shipListItemElem = document.querySelector(`.${shiptType.toLowerCase()}-${player.name}`);\n  let xCoord = Number(e.currentTarget.dataset.xCoord);\n  let yCoord = Number(e.currentTarget.dataset.yCoord);\n  if (axis === 'X' && xCoord + shipLength > 10) {\n    xCoord = 10 - shipLength + 1;\n  }\n  if (axis === 'Y' && yCoord + shipLength > 10) {\n    yCoord = 10 - shipLength + 1;\n  }\n  if (player.gameboard.determineIfShipIsOnAnotherShip(shipLength, [xCoord, yCoord], axis)) return;\n  player.gameboard.placeShip(shipLength, player.name, shiptType, [xCoord, yCoord], axis);\n  if (player.gameboard.checkIfPlayerHasTypeOfShip(shiptType)) {\n    setTimeout(() => {\n      shipListItemElem.querySelector('div').classList.add('hidden');\n    }, 0);\n  }\n  showShipsOnGameboard(player);\n  console.log(shipListItemElem.querySelector('div'));\n  const didGameStart = (0,_gameLoop_js__WEBPACK_IMPORTED_MODULE_0__.startGameLoop)();\n  if (didGameStart) {\n    const narrationArea = document.createElement('div');\n    narrationArea.classList.add('narration-area');\n    axisBtn.parentElement.removeChild(axisBtn);\n    document.querySelector('main').insertAdjacentElement('afterbegin', narrationArea);\n  }\n}\nfunction updateNarrationArea(text) {\n  const narrationArea = document.querySelector('.narration-area');\n  if (!narrationArea) return;\n  narrationArea.textContent = '';\n  narrationArea.textContent = text;\n}\nfunction setAxis() {\n  const {\n    axis\n  } = this.dataset;\n  if (axis === 'X') {\n    this.textContent = 'Axis: Y';\n    this.dataset.axis = 'Y';\n  }\n  if (axis === 'Y') {\n    this.textContent = 'Axis: X';\n    this.dataset.axis = 'X';\n  }\n}\nfunction trackSunkenShip(ship) {\n  const sunkenShip = document.querySelector(`.${ship.id}`);\n  sunkenShip.classList.add('ship-sunken');\n  sunkenShip.style.color = 'red';\n}\nfunction addEventlistenersToPlayerGameboard(player, func) {\n  document.querySelectorAll(`.gameboard-element-${player.name}`).forEach(element => {\n    element.addEventListener('click', e => {\n      func(e, player);\n    });\n  });\n}\nfunction removeEventlistenersToPlayerGameboard() {\n  const oldBody = document.body;\n  const newBody = oldBody.cloneNode(true);\n  oldBody.parentNode.replaceChild(newBody, oldBody);\n}\nfunction showShipsOnGameboard(player) {\n  const playerGameArea = document.querySelector(`.${PLAYER_AREA_CLASS_NAME}${player.name}`);\n  player.gameboard.getAllShipCoords().forEach(shipCoords => {\n    shipCoords.forEach(coord => {\n      const shipElementGrid = playerGameArea.querySelector(`[data-x-coord=\"${coord[0]}\"][data-y-coord=\"${coord[1]}\"]`);\n      shipElementGrid.classList.remove('ship-hidden');\n      shipElementGrid.classList.add('ship-shown');\n    });\n  });\n}\nfunction hideShipsOnGameboard(player) {\n  const playerGameArea = document.querySelector(`.${PLAYER_AREA_CLASS_NAME}${player.name}`);\n  player.gameboard.getAllShipCoords().forEach(shipCoords => {\n    shipCoords.forEach(coord => {\n      const shipElementGrid = playerGameArea.querySelector(`[data-x-coord=\"${coord[0]}\"][data-y-coord=\"${coord[1]}\"]`);\n      shipElementGrid.classList.remove('ship-shown');\n      shipElementGrid.classList.add('ship-hidden');\n    });\n  });\n}\nfunction mutatePlayerGameboardAfterAttack(player, shot, attackResult) {\n  const gameboard = document.querySelector(`.gameboard-parent-${player.name}`);\n  const attackedGridElement = gameboard.querySelector(`[data-x-coord=\"${shot[0]}\"][data-y-coord=\"${shot[1]}\"]`);\n  if (attackResult.isHit) {\n    attackedGridElement.textContent = 'X';\n  } else {\n    attackedGridElement.style.background = 'red';\n  }\n}\nfunction showEndOfGameScreen(winner) {\n  const endGAmeModal = document.querySelector('.end-game-modal');\n  endGAmeModal.classList.toggle('hidden');\n  endGAmeModal.querySelector('.end-game-menu > h2').textContent = `The winner is ${winner}`;\n  document.querySelector('.play-again-btn').addEventListener('click', () => {\n    endGAmeModal.classList.toggle('hidden');\n    clearGameboards();\n    document.querySelector('.gamestart-form').classList.toggle('hidden');\n    const isOpponentAI = !player2NameInput.value;\n    (0,_gameLoop_js__WEBPACK_IMPORTED_MODULE_0__.setUpPlayers)(player1NameInput.value, player2NameInput.value, isOpponentAI);\n  });\n  document.querySelector('.play-again-with-other-players').addEventListener('click', () => {\n    endGAmeModal.classList.toggle('hidden');\n    clearGameboards();\n    document.querySelector('.gamestart-form').classList.toggle('hidden');\n    document.querySelector('.start-game-AI-btn').addEventListener('click', () => {\n      const isOpponentAI = !player2NameInput.value;\n      (0,_gameLoop_js__WEBPACK_IMPORTED_MODULE_0__.setUpPlayers)(player1NameInput.value, player2NameInput.value, isOpponentAI);\n    });\n  });\n}\nfunction clearGameboards() {\n  const gameboards = document.querySelectorAll('.player-area');\n  gameboards.forEach(gameboard => {\n    gameboard.parentElement.removeChild(gameboard);\n  });\n  const narrationArea = document.querySelector('.narration-area');\n  narrationArea.parentElement.removeChild(narrationArea);\n}\nfunction addHiddenClassToElement(element) {\n  element.classList.add('hidden');\n}\nstartGameWithAIBtn.addEventListener('click', () => {\n  const isOpponentAI = !player2NameInput.value;\n  (0,_gameLoop_js__WEBPACK_IMPORTED_MODULE_0__.setUpPlayers)(player1NameInput.value, player2NameInput.value, isOpponentAI);\n});\nstartGameWithPlayerBtn.addEventListener('click', () => {\n  const isOpponentAI = !player2NameInput.value;\n  (0,_gameLoop_js__WEBPACK_IMPORTED_MODULE_0__.setUpPlayers)(player1NameInput.value, player2NameInput.value, isOpponentAI);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Player\": () => (/* binding */ Player)\n/* harmony export */ });\n/* harmony import */ var _gameboard_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameboard.js */ \"./src/gameboard.js\");\n\nfunction Player(name) {\n  let isComputer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return {\n    name,\n    isComputer,\n    didLastShotHit: false,\n    lastShotCoords: null,\n    possibleShotsIfLastHit: null,\n    firstHitCoords: null,\n    hitAxis: null,\n    hitDirection: null,\n    isMyTurn: null,\n    gameboard: new _gameboard_js__WEBPACK_IMPORTED_MODULE_0__.Gameboard(),\n    attackEnemy(attackCoords, enemyPlayer) {\n      const attackResponse = enemyPlayer.gameboard.receiveAttack(attackCoords);\n      if (attackResponse === null) return null;\n      if (attackResponse.isHit) {\n        this.didLastShotHit = true;\n      } else {\n        this.didLastShotHit = false;\n      }\n      this.lastShotCoords = attackCoords;\n      if (attackResponse.didSink) {\n        this.mutatePlayerObjectAfterSinkingShip();\n      }\n      return attackResponse;\n    },\n    placeShipsRandomly() {\n      for (let i = 5; i >= 1; i -= 1) {\n        const length = i;\n        let startCoord = this.calculateRandomCoords();\n        const axis = this.calculateRandomAxis();\n        while (!this.gameboard.determineIfShipIsOnGameboard(length, startCoord, axis) || this.gameboard.determineIfShipIsOnAnotherShip(length, startCoord, axis)) {\n          startCoord = this.calculateRandomCoords();\n        }\n        switch (i) {\n          case 5:\n            this.gameboard.placeShip(length, this.name, 'Carrier', startCoord, axis);\n            break;\n          case 4:\n            this.gameboard.placeShip(length, this.name, 'Battleship', startCoord, axis);\n            break;\n          case 3:\n            this.gameboard.placeShip(length, this.name, 'Cruiser', startCoord, axis);\n            break;\n          case 2:\n            this.gameboard.placeShip(length + 1, this.name, 'Submarine', startCoord, axis);\n            break;\n          case 1:\n            this.gameboard.placeShip(length + 1, this.name, 'Destroyer', startCoord, axis);\n            break;\n          default:\n            console.log('shit');\n        }\n      }\n    },\n    computerShot(enemyPlayer) {\n      if (!this.isComputer) return;\n      let nextShot;\n      console.log(this);\n      if (this.hitAxis !== null && this.hitDirection !== null && !this.didLastShotHit) {\n        console.log('Attacking ship if end is reached but not sunk');\n        nextShot = this.shotIfEndOfShipButNotSunk();\n        if (this.isNextShotAlreadyDone(nextShot, enemyPlayer)) {\n          nextShot = this.shotIfLookingForSecondHit(enemyPlayer);\n        }\n        const attackResponse = this.attackEnemy(nextShot, enemyPlayer);\n        return {\n          nextShot,\n          attackResponse\n        };\n      }\n      if (this.hitAxis !== null && this.hitDirection !== null && this.didLastShotHit) {\n        console.log('Attacking ship on axis and direction');\n        nextShot = this.shotIfShipIsHitTwice(enemyPlayer);\n        const attackResponse = this.attackEnemy(nextShot, enemyPlayer);\n        return {\n          nextShot,\n          attackResponse\n        };\n      }\n      if (this.didLastShotHit || this.possibleShotsIfLastHit !== null) {\n        console.log('Attacking on search pattern');\n        if (this.possibleShotsIfLastHit === null) {\n          this.possibleShotsIfLastHit = [[this.lastShotCoords[0] + 1, this.lastShotCoords[1]], [this.lastShotCoords[0] - 1, this.lastShotCoords[1]], [this.lastShotCoords[0], this.lastShotCoords[1] + 1], [this.lastShotCoords[0], this.lastShotCoords[1] - 1]].filter(value => value[0] > 0 && value[0] < 11 && value[1] > 0 && value[1] < 11);\n        }\n        nextShot = this.shotIfLookingForSecondHit(enemyPlayer);\n        const attackResponse = this.attackEnemy(nextShot, enemyPlayer);\n        if (attackResponse.isHit) this.mutatePlayerObjectOnHit();\n        return {\n          nextShot,\n          attackResponse\n        };\n      }\n\n      // * No hit, no ship in sinking, random shot\n      if (!this.didLastShotHit && this.possibleShotsIfLastHit === null) {\n        console.log('RANDOM SHOT');\n        nextShot = this.randomShot(enemyPlayer);\n        const attackResponse = this.attackEnemy(nextShot, enemyPlayer);\n        return {\n          nextShot,\n          attackResponse\n        };\n      }\n    },\n    shotIfEndOfShipButNotSunk() {\n      let nextShot;\n      if (this.hitDirection === 'positive') {\n        this.hitDirection = 'negative';\n      } else if (this.hitDirection === 'negative') {\n        this.hitDirection = 'positive';\n      }\n      if (this.hitAxis === 'X') {\n        if (this.hitDirection === 'positive') {\n          nextShot = [this.firstHitCoords[0] + 1, this.firstHitCoords[1]];\n        } else if (this.hitDirection === 'negative') {\n          nextShot = [this.firstHitCoords[0] - 1, this.firstHitCoords[1]];\n        }\n      } else if (this.hitAxis === 'Y') {\n        if (this.hitDirection === 'positive') {\n          nextShot = [this.firstHitCoords[0], this.firstHitCoords[1] + 1];\n        } else if (this.hitDirection === 'negative') {\n          nextShot = [this.firstHitCoords[0], this.firstHitCoords[1] - 1];\n        }\n      }\n      return nextShot;\n    },\n    shotIfShipIsHitTwice(enemyPlayer) {\n      let nextShot;\n      if (this.hitAxis === 'X') {\n        if (this.hitDirection === 'positive') {\n          nextShot = [this.lastShotCoords[0] + 1, this.lastShotCoords[1]];\n        } else if (this.hitDirection === 'negative') {\n          nextShot = [this.lastShotCoords[0] - 1, this.lastShotCoords[1]];\n        }\n      } else if (this.hitAxis === 'Y') {\n        if (this.hitDirection === 'positive') {\n          nextShot = [this.lastShotCoords[0], this.lastShotCoords[1] + 1];\n        } else if (this.hitDirection === 'negative') {\n          nextShot = [this.lastShotCoords[0], this.lastShotCoords[1] - 1];\n        }\n      }\n      if (this.isNextShotAlreadyDone(nextShot, enemyPlayer)) {\n        nextShot = this.shotIfEndOfShipButNotSunk();\n      }\n      if (nextShot[0] < 1 || nextShot[0] > 10 || nextShot[1] < 1 || nextShot[1] > 10) {\n        nextShot = this.shotIfLookingForSecondHit(enemyPlayer);\n      }\n      return nextShot;\n    },\n    shotIfLookingForSecondHit(enemyPlayer) {\n      let nextShot;\n      if (this.firstHitCoords === null) this.firstHitCoords = this.lastShotCoords;\n      if (this.possibleShotsIfLastHit.length === 0) {\n        nextShot = this.randomShot();\n        return nextShot;\n      }\n      nextShot = this.possibleShotsIfLastHit.splice(Math.floor(Math.random() * this.possibleShotsIfLastHit.length), 1);\n      while (this.isNextShotAlreadyDone(nextShot[0], enemyPlayer)) {\n        nextShot = this.possibleShotsIfLastHit.splice(Math.floor(Math.random() * this.possibleShotsIfLastHit.length), 1);\n      }\n      return nextShot[0];\n    },\n    randomShot(enemyPlayer) {\n      let nextShot = this.calculateNextShotCoords();\n      while (this.isNextShotAlreadyDone(nextShot, enemyPlayer)) {\n        nextShot = this.calculateNextShotCoords();\n      }\n      return nextShot;\n    },\n    mutatePlayerObjectAfterSinkingShip() {\n      this.didLastShotHit = false;\n      this.possibleShotsIfLastHit = null;\n      this.firstHitCoords = null;\n      this.hitAxis = null;\n      this.hitDirection = null;\n    },\n    mutatePlayerObjectOnHit() {\n      console.log('MUTATING OBJECT');\n      if (this.didLastShotHit) {\n        const hitDirData = [this.firstHitCoords[0] - this.lastShotCoords[0], this.firstHitCoords[1] - this.lastShotCoords[1]];\n        if (hitDirData[0] !== 0) {\n          this.hitAxis = 'X';\n        } else {\n          this.hitAxis = 'Y';\n        }\n        if (hitDirData[0] === -1 || hitDirData[1] === -1) {\n          this.hitDirection = 'positive';\n        } else {\n          this.hitDirection = 'negative';\n        }\n      }\n    },\n    calculateNextShotCoords() {\n      return [this.getRandomNumBetween1And10(), this.getRandomNumBetween1And10()];\n    },\n    calculateRandomCoords() {\n      return [this.getRandomNumBetween1And10(), this.getRandomNumBetween1And10()];\n    },\n    calculateRandomAxis() {\n      return Math.floor(Math.random() * 2) ? 'X' : 'Y';\n    },\n    isNextShotAlreadyDone(shotCoords, enemyPlayer) {\n      let isShotAlreadyDone = false;\n      for (let i = 0; i < enemyPlayer.gameboard.missedHits.length; i += 1) {\n        if (enemyPlayer.gameboard.missedHits[i][0] === shotCoords[0] && enemyPlayer.gameboard.missedHits[i][1] === shotCoords[1]) {\n          isShotAlreadyDone = true;\n          break;\n        }\n        continue;\n      }\n      return isShotAlreadyDone;\n    },\n    getRandomNumBetween1And10() {\n      return Math.floor(Math.random() * 10) + 1;\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGxheWVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDO0FBRXBDLFNBQVNDLE1BQU1BLENBQUNDLElBQUksRUFBc0I7RUFBQSxJQUFwQkMsVUFBVSxHQUFBQyxTQUFBLENBQUFDLE1BQUEsUUFBQUQsU0FBQSxRQUFBRSxTQUFBLEdBQUFGLFNBQUEsTUFBRyxLQUFLO0VBQzdDLE9BQU87SUFDTEYsSUFBSTtJQUNKQyxVQUFVO0lBQ1ZJLGNBQWMsRUFBRSxLQUFLO0lBQ3JCQyxjQUFjLEVBQUUsSUFBSTtJQUNwQkMsc0JBQXNCLEVBQUUsSUFBSTtJQUM1QkMsY0FBYyxFQUFFLElBQUk7SUFDcEJDLE9BQU8sRUFBRSxJQUFJO0lBQ2JDLFlBQVksRUFBRSxJQUFJO0lBQ2xCQyxRQUFRLEVBQUUsSUFBSTtJQUNkQyxTQUFTLEVBQUUsSUFBSWQsb0RBQVMsRUFBRTtJQUUxQmUsV0FBV0EsQ0FBQ0MsWUFBWSxFQUFFQyxXQUFXLEVBQUU7TUFDckMsTUFBTUMsY0FBYyxHQUFHRCxXQUFXLENBQUNILFNBQVMsQ0FBQ0ssYUFBYSxDQUFDSCxZQUFZLENBQUM7TUFDeEUsSUFBSUUsY0FBYyxLQUFLLElBQUksRUFBRSxPQUFPLElBQUk7TUFDeEMsSUFBSUEsY0FBYyxDQUFDRSxLQUFLLEVBQUU7UUFDeEIsSUFBSSxDQUFDYixjQUFjLEdBQUcsSUFBSTtNQUM1QixDQUFDLE1BQU07UUFDTCxJQUFJLENBQUNBLGNBQWMsR0FBRyxLQUFLO01BQzdCO01BQ0EsSUFBSSxDQUFDQyxjQUFjLEdBQUdRLFlBQVk7TUFFbEMsSUFBSUUsY0FBYyxDQUFDRyxPQUFPLEVBQUU7UUFDMUIsSUFBSSxDQUFDQyxrQ0FBa0MsRUFBRTtNQUMzQztNQUNBLE9BQU9KLGNBQWM7SUFDdkIsQ0FBQztJQUVESyxrQkFBa0JBLENBQUEsRUFBRztNQUNuQixLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsSUFBSSxDQUFDLEVBQUVBLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDOUIsTUFBTW5CLE1BQU0sR0FBR21CLENBQUM7UUFDaEIsSUFBSUMsVUFBVSxHQUFHLElBQUksQ0FBQ0MscUJBQXFCLEVBQUU7UUFDN0MsTUFBTUMsSUFBSSxHQUFHLElBQUksQ0FBQ0MsbUJBQW1CLEVBQUU7UUFFdkMsT0FDRSxDQUFDLElBQUksQ0FBQ2QsU0FBUyxDQUFDZSw0QkFBNEIsQ0FDMUN4QixNQUFNLEVBQ05vQixVQUFVLEVBQ1ZFLElBQUksQ0FDTCxJQUNELElBQUksQ0FBQ2IsU0FBUyxDQUFDZ0IsOEJBQThCLENBQzNDekIsTUFBTSxFQUNOb0IsVUFBVSxFQUNWRSxJQUFJLENBQ0wsRUFDRDtVQUNBRixVQUFVLEdBQUcsSUFBSSxDQUFDQyxxQkFBcUIsRUFBRTtRQUMzQztRQUVBLFFBQVFGLENBQUM7VUFDUCxLQUFLLENBQUM7WUFDSixJQUFJLENBQUNWLFNBQVMsQ0FBQ2lCLFNBQVMsQ0FDdEIxQixNQUFNLEVBQ04sSUFBSSxDQUFDSCxJQUFJLEVBQ1QsU0FBUyxFQUNUdUIsVUFBVSxFQUNWRSxJQUFJLENBQ0w7WUFDRDtVQUNGLEtBQUssQ0FBQztZQUNKLElBQUksQ0FBQ2IsU0FBUyxDQUFDaUIsU0FBUyxDQUN0QjFCLE1BQU0sRUFDTixJQUFJLENBQUNILElBQUksRUFDVCxZQUFZLEVBQ1p1QixVQUFVLEVBQ1ZFLElBQUksQ0FDTDtZQUNEO1VBQ0YsS0FBSyxDQUFDO1lBQ0osSUFBSSxDQUFDYixTQUFTLENBQUNpQixTQUFTLENBQ3RCMUIsTUFBTSxFQUNOLElBQUksQ0FBQ0gsSUFBSSxFQUNULFNBQVMsRUFDVHVCLFVBQVUsRUFDVkUsSUFBSSxDQUNMO1lBQ0Q7VUFDRixLQUFLLENBQUM7WUFDSixJQUFJLENBQUNiLFNBQVMsQ0FBQ2lCLFNBQVMsQ0FDdEIxQixNQUFNLEdBQUcsQ0FBQyxFQUNWLElBQUksQ0FBQ0gsSUFBSSxFQUNULFdBQVcsRUFDWHVCLFVBQVUsRUFDVkUsSUFBSSxDQUNMO1lBQ0Q7VUFDRixLQUFLLENBQUM7WUFDSixJQUFJLENBQUNiLFNBQVMsQ0FBQ2lCLFNBQVMsQ0FDdEIxQixNQUFNLEdBQUcsQ0FBQyxFQUNWLElBQUksQ0FBQ0gsSUFBSSxFQUNULFdBQVcsRUFDWHVCLFVBQVUsRUFDVkUsSUFBSSxDQUNMO1lBQ0Q7VUFDRjtZQUNFSyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxNQUFNLENBQUM7UUFBQztNQUUxQjtJQUNGLENBQUM7SUFFREMsWUFBWUEsQ0FBQ2pCLFdBQVcsRUFBRTtNQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDZCxVQUFVLEVBQUU7TUFDdEIsSUFBSWdDLFFBQVE7TUFDWkgsT0FBTyxDQUFDQyxHQUFHLENBQUMsSUFBSSxDQUFDO01BRWpCLElBQ0UsSUFBSSxDQUFDdEIsT0FBTyxLQUFLLElBQUksSUFDckIsSUFBSSxDQUFDQyxZQUFZLEtBQUssSUFBSSxJQUMxQixDQUFDLElBQUksQ0FBQ0wsY0FBYyxFQUNwQjtRQUNBeUIsT0FBTyxDQUFDQyxHQUFHLENBQUMsK0NBQStDLENBQUM7UUFDNURFLFFBQVEsR0FBRyxJQUFJLENBQUNDLHlCQUF5QixFQUFFO1FBQzNDLElBQUksSUFBSSxDQUFDQyxxQkFBcUIsQ0FBQ0YsUUFBUSxFQUFFbEIsV0FBVyxDQUFDLEVBQUU7VUFDckRrQixRQUFRLEdBQUcsSUFBSSxDQUFDRyx5QkFBeUIsQ0FBQ3JCLFdBQVcsQ0FBQztRQUN4RDtRQUNBLE1BQU1DLGNBQWMsR0FBRyxJQUFJLENBQUNILFdBQVcsQ0FBQ29CLFFBQVEsRUFBRWxCLFdBQVcsQ0FBQztRQUM5RCxPQUFPO1VBQUVrQixRQUFRO1VBQUVqQjtRQUFlLENBQUM7TUFDckM7TUFFQSxJQUNFLElBQUksQ0FBQ1AsT0FBTyxLQUFLLElBQUksSUFDckIsSUFBSSxDQUFDQyxZQUFZLEtBQUssSUFBSSxJQUMxQixJQUFJLENBQUNMLGNBQWMsRUFDbkI7UUFDQXlCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHNDQUFzQyxDQUFDO1FBQ25ERSxRQUFRLEdBQUcsSUFBSSxDQUFDSSxvQkFBb0IsQ0FBQ3RCLFdBQVcsQ0FBQztRQUNqRCxNQUFNQyxjQUFjLEdBQUcsSUFBSSxDQUFDSCxXQUFXLENBQUNvQixRQUFRLEVBQUVsQixXQUFXLENBQUM7UUFDOUQsT0FBTztVQUFFa0IsUUFBUTtVQUFFakI7UUFBZSxDQUFDO01BQ3JDO01BRUEsSUFBSSxJQUFJLENBQUNYLGNBQWMsSUFBSSxJQUFJLENBQUNFLHNCQUFzQixLQUFLLElBQUksRUFBRTtRQUMvRHVCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDZCQUE2QixDQUFDO1FBQzFDLElBQUksSUFBSSxDQUFDeEIsc0JBQXNCLEtBQUssSUFBSSxFQUFFO1VBQ3hDLElBQUksQ0FBQ0Esc0JBQXNCLEdBQUcsQ0FDNUIsQ0FBQyxJQUFJLENBQUNELGNBQWMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDQSxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFDcEQsQ0FBQyxJQUFJLENBQUNBLGNBQWMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDQSxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFDcEQsQ0FBQyxJQUFJLENBQUNBLGNBQWMsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUNBLGNBQWMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsRUFDcEQsQ0FBQyxJQUFJLENBQUNBLGNBQWMsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUNBLGNBQWMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FDckQsQ0FBQ2dDLE1BQU0sQ0FDTEMsS0FBSyxJQUNKQSxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJQSxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxJQUFJQSxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJQSxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUNqRTtRQUNIO1FBRUFOLFFBQVEsR0FBRyxJQUFJLENBQUNHLHlCQUF5QixDQUFDckIsV0FBVyxDQUFDO1FBQ3RELE1BQU1DLGNBQWMsR0FBRyxJQUFJLENBQUNILFdBQVcsQ0FBQ29CLFFBQVEsRUFBRWxCLFdBQVcsQ0FBQztRQUM5RCxJQUFJQyxjQUFjLENBQUNFLEtBQUssRUFBRSxJQUFJLENBQUNzQix1QkFBdUIsRUFBRTtRQUN4RCxPQUFPO1VBQUVQLFFBQVE7VUFBRWpCO1FBQWUsQ0FBQztNQUNyQzs7TUFFQTtNQUNBLElBQUksQ0FBQyxJQUFJLENBQUNYLGNBQWMsSUFBSSxJQUFJLENBQUNFLHNCQUFzQixLQUFLLElBQUksRUFBRTtRQUNoRXVCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGFBQWEsQ0FBQztRQUUxQkUsUUFBUSxHQUFHLElBQUksQ0FBQ1EsVUFBVSxDQUFDMUIsV0FBVyxDQUFDO1FBQ3ZDLE1BQU1DLGNBQWMsR0FBRyxJQUFJLENBQUNILFdBQVcsQ0FBQ29CLFFBQVEsRUFBRWxCLFdBQVcsQ0FBQztRQUM5RCxPQUFPO1VBQUVrQixRQUFRO1VBQUVqQjtRQUFlLENBQUM7TUFDckM7SUFDRixDQUFDO0lBRURrQix5QkFBeUJBLENBQUEsRUFBRztNQUMxQixJQUFJRCxRQUFRO01BRVosSUFBSSxJQUFJLENBQUN2QixZQUFZLEtBQUssVUFBVSxFQUFFO1FBQ3BDLElBQUksQ0FBQ0EsWUFBWSxHQUFHLFVBQVU7TUFDaEMsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDQSxZQUFZLEtBQUssVUFBVSxFQUFFO1FBQzNDLElBQUksQ0FBQ0EsWUFBWSxHQUFHLFVBQVU7TUFDaEM7TUFFQSxJQUFJLElBQUksQ0FBQ0QsT0FBTyxLQUFLLEdBQUcsRUFBRTtRQUN4QixJQUFJLElBQUksQ0FBQ0MsWUFBWSxLQUFLLFVBQVUsRUFBRTtVQUNwQ3VCLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQ3pCLGNBQWMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDQSxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakUsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDRSxZQUFZLEtBQUssVUFBVSxFQUFFO1VBQzNDdUIsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDekIsY0FBYyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJLENBQUNBLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqRTtNQUNGLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQ0MsT0FBTyxLQUFLLEdBQUcsRUFBRTtRQUMvQixJQUFJLElBQUksQ0FBQ0MsWUFBWSxLQUFLLFVBQVUsRUFBRTtVQUNwQ3VCLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQ3pCLGNBQWMsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUNBLGNBQWMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDakUsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDRSxZQUFZLEtBQUssVUFBVSxFQUFFO1VBQzNDdUIsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDekIsY0FBYyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQ0EsY0FBYyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNqRTtNQUNGO01BQ0EsT0FBT3lCLFFBQVE7SUFDakIsQ0FBQztJQUVESSxvQkFBb0JBLENBQUN0QixXQUFXLEVBQUU7TUFDaEMsSUFBSWtCLFFBQVE7TUFDWixJQUFJLElBQUksQ0FBQ3hCLE9BQU8sS0FBSyxHQUFHLEVBQUU7UUFDeEIsSUFBSSxJQUFJLENBQUNDLFlBQVksS0FBSyxVQUFVLEVBQUU7VUFDcEN1QixRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMzQixjQUFjLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQ0EsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pFLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQ0ksWUFBWSxLQUFLLFVBQVUsRUFBRTtVQUMzQ3VCLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQzNCLGNBQWMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDQSxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakU7TUFDRixDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUNHLE9BQU8sS0FBSyxHQUFHLEVBQUU7UUFDL0IsSUFBSSxJQUFJLENBQUNDLFlBQVksS0FBSyxVQUFVLEVBQUU7VUFDcEN1QixRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMzQixjQUFjLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDQSxjQUFjLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pFLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQ0ksWUFBWSxLQUFLLFVBQVUsRUFBRTtVQUMzQ3VCLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQzNCLGNBQWMsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUNBLGNBQWMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDakU7TUFDRjtNQUNBLElBQUksSUFBSSxDQUFDNkIscUJBQXFCLENBQUNGLFFBQVEsRUFBRWxCLFdBQVcsQ0FBQyxFQUFFO1FBQ3JEa0IsUUFBUSxHQUFHLElBQUksQ0FBQ0MseUJBQXlCLEVBQUU7TUFDN0M7TUFDQSxJQUNFRCxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUNmQSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxJQUNoQkEsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFDZkEsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFDaEI7UUFDQUEsUUFBUSxHQUFHLElBQUksQ0FBQ0cseUJBQXlCLENBQUNyQixXQUFXLENBQUM7TUFDeEQ7TUFDQSxPQUFPa0IsUUFBUTtJQUNqQixDQUFDO0lBRURHLHlCQUF5QkEsQ0FBQ3JCLFdBQVcsRUFBRTtNQUNyQyxJQUFJa0IsUUFBUTtNQUNaLElBQUksSUFBSSxDQUFDekIsY0FBYyxLQUFLLElBQUksRUFDOUIsSUFBSSxDQUFDQSxjQUFjLEdBQUcsSUFBSSxDQUFDRixjQUFjO01BQzNDLElBQUksSUFBSSxDQUFDQyxzQkFBc0IsQ0FBQ0osTUFBTSxLQUFLLENBQUMsRUFBRTtRQUM1QzhCLFFBQVEsR0FBRyxJQUFJLENBQUNRLFVBQVUsRUFBRTtRQUM1QixPQUFPUixRQUFRO01BQ2pCO01BQ0FBLFFBQVEsR0FBRyxJQUFJLENBQUMxQixzQkFBc0IsQ0FBQ21DLE1BQU0sQ0FDM0NDLElBQUksQ0FBQ0MsS0FBSyxDQUFDRCxJQUFJLENBQUNFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQ3RDLHNCQUFzQixDQUFDSixNQUFNLENBQUMsRUFDOUQsQ0FBQyxDQUNGO01BQ0QsT0FBTyxJQUFJLENBQUNnQyxxQkFBcUIsQ0FBQ0YsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFbEIsV0FBVyxDQUFDLEVBQUU7UUFDM0RrQixRQUFRLEdBQUcsSUFBSSxDQUFDMUIsc0JBQXNCLENBQUNtQyxNQUFNLENBQzNDQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0QsSUFBSSxDQUFDRSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUN0QyxzQkFBc0IsQ0FBQ0osTUFBTSxDQUFDLEVBQzlELENBQUMsQ0FDRjtNQUNIO01BQ0EsT0FBTzhCLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDcEIsQ0FBQztJQUVEUSxVQUFVQSxDQUFDMUIsV0FBVyxFQUFFO01BQ3RCLElBQUlrQixRQUFRLEdBQUcsSUFBSSxDQUFDYSx1QkFBdUIsRUFBRTtNQUU3QyxPQUFPLElBQUksQ0FBQ1gscUJBQXFCLENBQUNGLFFBQVEsRUFBRWxCLFdBQVcsQ0FBQyxFQUFFO1FBQ3hEa0IsUUFBUSxHQUFHLElBQUksQ0FBQ2EsdUJBQXVCLEVBQUU7TUFDM0M7TUFDQSxPQUFPYixRQUFRO0lBQ2pCLENBQUM7SUFFRGIsa0NBQWtDQSxDQUFBLEVBQUc7TUFDbkMsSUFBSSxDQUFDZixjQUFjLEdBQUcsS0FBSztNQUMzQixJQUFJLENBQUNFLHNCQUFzQixHQUFHLElBQUk7TUFDbEMsSUFBSSxDQUFDQyxjQUFjLEdBQUcsSUFBSTtNQUMxQixJQUFJLENBQUNDLE9BQU8sR0FBRyxJQUFJO01BQ25CLElBQUksQ0FBQ0MsWUFBWSxHQUFHLElBQUk7SUFDMUIsQ0FBQztJQUVEOEIsdUJBQXVCQSxDQUFBLEVBQUc7TUFDeEJWLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGlCQUFpQixDQUFDO01BQzlCLElBQUksSUFBSSxDQUFDMUIsY0FBYyxFQUFFO1FBQ3ZCLE1BQU0wQyxVQUFVLEdBQUcsQ0FDakIsSUFBSSxDQUFDdkMsY0FBYyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQ0YsY0FBYyxDQUFDLENBQUMsQ0FBQyxFQUMvQyxJQUFJLENBQUNFLGNBQWMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUNGLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FDaEQ7UUFDRCxJQUFJeUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRTtVQUN2QixJQUFJLENBQUN0QyxPQUFPLEdBQUcsR0FBRztRQUNwQixDQUFDLE1BQU07VUFDTCxJQUFJLENBQUNBLE9BQU8sR0FBRyxHQUFHO1FBQ3BCO1FBQ0EsSUFBSXNDLFVBQVUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSUEsVUFBVSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1VBQ2hELElBQUksQ0FBQ3JDLFlBQVksR0FBRyxVQUFVO1FBQ2hDLENBQUMsTUFBTTtVQUNMLElBQUksQ0FBQ0EsWUFBWSxHQUFHLFVBQVU7UUFDaEM7TUFDRjtJQUNGLENBQUM7SUFFRG9DLHVCQUF1QkEsQ0FBQSxFQUFHO01BQ3hCLE9BQU8sQ0FDTCxJQUFJLENBQUNFLHlCQUF5QixFQUFFLEVBQ2hDLElBQUksQ0FBQ0EseUJBQXlCLEVBQUUsQ0FDakM7SUFDSCxDQUFDO0lBRUR4QixxQkFBcUJBLENBQUEsRUFBRztNQUN0QixPQUFPLENBQ0wsSUFBSSxDQUFDd0IseUJBQXlCLEVBQUUsRUFDaEMsSUFBSSxDQUFDQSx5QkFBeUIsRUFBRSxDQUNqQztJQUNILENBQUM7SUFFRHRCLG1CQUFtQkEsQ0FBQSxFQUFHO01BQ3BCLE9BQU9pQixJQUFJLENBQUNDLEtBQUssQ0FBQ0QsSUFBSSxDQUFDRSxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsR0FBRztJQUNsRCxDQUFDO0lBRURWLHFCQUFxQkEsQ0FBQ2MsVUFBVSxFQUFFbEMsV0FBVyxFQUFFO01BQzdDLElBQUltQyxpQkFBaUIsR0FBRyxLQUFLO01BQzdCLEtBQUssSUFBSTVCLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR1AsV0FBVyxDQUFDSCxTQUFTLENBQUN1QyxVQUFVLENBQUNoRCxNQUFNLEVBQUVtQixDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ25FLElBQ0VQLFdBQVcsQ0FBQ0gsU0FBUyxDQUFDdUMsVUFBVSxDQUFDN0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUsyQixVQUFVLENBQUMsQ0FBQyxDQUFDLElBQ3hEbEMsV0FBVyxDQUFDSCxTQUFTLENBQUN1QyxVQUFVLENBQUM3QixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSzJCLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFDeEQ7VUFDQUMsaUJBQWlCLEdBQUcsSUFBSTtVQUN4QjtRQUNGO1FBQ0E7TUFDRjtNQUNBLE9BQU9BLGlCQUFpQjtJQUMxQixDQUFDO0lBRURGLHlCQUF5QkEsQ0FBQSxFQUFHO01BQzFCLE9BQU9MLElBQUksQ0FBQ0MsS0FBSyxDQUFDRCxJQUFJLENBQUNFLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUM7SUFDM0M7RUFDRixDQUFDO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3BsYXllci5qcz9hOGEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdhbWVib2FyZCB9IGZyb20gJy4vZ2FtZWJvYXJkLmpzJztcblxuZXhwb3J0IGZ1bmN0aW9uIFBsYXllcihuYW1lLCBpc0NvbXB1dGVyID0gZmFsc2UpIHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lLFxuICAgIGlzQ29tcHV0ZXIsXG4gICAgZGlkTGFzdFNob3RIaXQ6IGZhbHNlLFxuICAgIGxhc3RTaG90Q29vcmRzOiBudWxsLFxuICAgIHBvc3NpYmxlU2hvdHNJZkxhc3RIaXQ6IG51bGwsXG4gICAgZmlyc3RIaXRDb29yZHM6IG51bGwsXG4gICAgaGl0QXhpczogbnVsbCxcbiAgICBoaXREaXJlY3Rpb246IG51bGwsXG4gICAgaXNNeVR1cm46IG51bGwsXG4gICAgZ2FtZWJvYXJkOiBuZXcgR2FtZWJvYXJkKCksXG5cbiAgICBhdHRhY2tFbmVteShhdHRhY2tDb29yZHMsIGVuZW15UGxheWVyKSB7XG4gICAgICBjb25zdCBhdHRhY2tSZXNwb25zZSA9IGVuZW15UGxheWVyLmdhbWVib2FyZC5yZWNlaXZlQXR0YWNrKGF0dGFja0Nvb3Jkcyk7XG4gICAgICBpZiAoYXR0YWNrUmVzcG9uc2UgPT09IG51bGwpIHJldHVybiBudWxsO1xuICAgICAgaWYgKGF0dGFja1Jlc3BvbnNlLmlzSGl0KSB7XG4gICAgICAgIHRoaXMuZGlkTGFzdFNob3RIaXQgPSB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5kaWRMYXN0U2hvdEhpdCA9IGZhbHNlO1xuICAgICAgfVxuICAgICAgdGhpcy5sYXN0U2hvdENvb3JkcyA9IGF0dGFja0Nvb3JkcztcblxuICAgICAgaWYgKGF0dGFja1Jlc3BvbnNlLmRpZFNpbmspIHtcbiAgICAgICAgdGhpcy5tdXRhdGVQbGF5ZXJPYmplY3RBZnRlclNpbmtpbmdTaGlwKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gYXR0YWNrUmVzcG9uc2U7XG4gICAgfSxcblxuICAgIHBsYWNlU2hpcHNSYW5kb21seSgpIHtcbiAgICAgIGZvciAobGV0IGkgPSA1OyBpID49IDE7IGkgLT0gMSkge1xuICAgICAgICBjb25zdCBsZW5ndGggPSBpO1xuICAgICAgICBsZXQgc3RhcnRDb29yZCA9IHRoaXMuY2FsY3VsYXRlUmFuZG9tQ29vcmRzKCk7XG4gICAgICAgIGNvbnN0IGF4aXMgPSB0aGlzLmNhbGN1bGF0ZVJhbmRvbUF4aXMoKTtcblxuICAgICAgICB3aGlsZSAoXG4gICAgICAgICAgIXRoaXMuZ2FtZWJvYXJkLmRldGVybWluZUlmU2hpcElzT25HYW1lYm9hcmQoXG4gICAgICAgICAgICBsZW5ndGgsXG4gICAgICAgICAgICBzdGFydENvb3JkLFxuICAgICAgICAgICAgYXhpc1xuICAgICAgICAgICkgfHxcbiAgICAgICAgICB0aGlzLmdhbWVib2FyZC5kZXRlcm1pbmVJZlNoaXBJc09uQW5vdGhlclNoaXAoXG4gICAgICAgICAgICBsZW5ndGgsXG4gICAgICAgICAgICBzdGFydENvb3JkLFxuICAgICAgICAgICAgYXhpc1xuICAgICAgICAgIClcbiAgICAgICAgKSB7XG4gICAgICAgICAgc3RhcnRDb29yZCA9IHRoaXMuY2FsY3VsYXRlUmFuZG9tQ29vcmRzKCk7XG4gICAgICAgIH1cblxuICAgICAgICBzd2l0Y2ggKGkpIHtcbiAgICAgICAgICBjYXNlIDU6XG4gICAgICAgICAgICB0aGlzLmdhbWVib2FyZC5wbGFjZVNoaXAoXG4gICAgICAgICAgICAgIGxlbmd0aCxcbiAgICAgICAgICAgICAgdGhpcy5uYW1lLFxuICAgICAgICAgICAgICAnQ2FycmllcicsXG4gICAgICAgICAgICAgIHN0YXJ0Q29vcmQsXG4gICAgICAgICAgICAgIGF4aXNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICB0aGlzLmdhbWVib2FyZC5wbGFjZVNoaXAoXG4gICAgICAgICAgICAgIGxlbmd0aCxcbiAgICAgICAgICAgICAgdGhpcy5uYW1lLFxuICAgICAgICAgICAgICAnQmF0dGxlc2hpcCcsXG4gICAgICAgICAgICAgIHN0YXJ0Q29vcmQsXG4gICAgICAgICAgICAgIGF4aXNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICB0aGlzLmdhbWVib2FyZC5wbGFjZVNoaXAoXG4gICAgICAgICAgICAgIGxlbmd0aCxcbiAgICAgICAgICAgICAgdGhpcy5uYW1lLFxuICAgICAgICAgICAgICAnQ3J1aXNlcicsXG4gICAgICAgICAgICAgIHN0YXJ0Q29vcmQsXG4gICAgICAgICAgICAgIGF4aXNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICB0aGlzLmdhbWVib2FyZC5wbGFjZVNoaXAoXG4gICAgICAgICAgICAgIGxlbmd0aCArIDEsXG4gICAgICAgICAgICAgIHRoaXMubmFtZSxcbiAgICAgICAgICAgICAgJ1N1Ym1hcmluZScsXG4gICAgICAgICAgICAgIHN0YXJ0Q29vcmQsXG4gICAgICAgICAgICAgIGF4aXNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICB0aGlzLmdhbWVib2FyZC5wbGFjZVNoaXAoXG4gICAgICAgICAgICAgIGxlbmd0aCArIDEsXG4gICAgICAgICAgICAgIHRoaXMubmFtZSxcbiAgICAgICAgICAgICAgJ0Rlc3Ryb3llcicsXG4gICAgICAgICAgICAgIHN0YXJ0Q29vcmQsXG4gICAgICAgICAgICAgIGF4aXNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3NoaXQnKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBjb21wdXRlclNob3QoZW5lbXlQbGF5ZXIpIHtcbiAgICAgIGlmICghdGhpcy5pc0NvbXB1dGVyKSByZXR1cm47XG4gICAgICBsZXQgbmV4dFNob3Q7XG4gICAgICBjb25zb2xlLmxvZyh0aGlzKTtcblxuICAgICAgaWYgKFxuICAgICAgICB0aGlzLmhpdEF4aXMgIT09IG51bGwgJiZcbiAgICAgICAgdGhpcy5oaXREaXJlY3Rpb24gIT09IG51bGwgJiZcbiAgICAgICAgIXRoaXMuZGlkTGFzdFNob3RIaXRcbiAgICAgICkge1xuICAgICAgICBjb25zb2xlLmxvZygnQXR0YWNraW5nIHNoaXAgaWYgZW5kIGlzIHJlYWNoZWQgYnV0IG5vdCBzdW5rJyk7XG4gICAgICAgIG5leHRTaG90ID0gdGhpcy5zaG90SWZFbmRPZlNoaXBCdXROb3RTdW5rKCk7XG4gICAgICAgIGlmICh0aGlzLmlzTmV4dFNob3RBbHJlYWR5RG9uZShuZXh0U2hvdCwgZW5lbXlQbGF5ZXIpKSB7XG4gICAgICAgICAgbmV4dFNob3QgPSB0aGlzLnNob3RJZkxvb2tpbmdGb3JTZWNvbmRIaXQoZW5lbXlQbGF5ZXIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGF0dGFja1Jlc3BvbnNlID0gdGhpcy5hdHRhY2tFbmVteShuZXh0U2hvdCwgZW5lbXlQbGF5ZXIpO1xuICAgICAgICByZXR1cm4geyBuZXh0U2hvdCwgYXR0YWNrUmVzcG9uc2UgfTtcbiAgICAgIH1cblxuICAgICAgaWYgKFxuICAgICAgICB0aGlzLmhpdEF4aXMgIT09IG51bGwgJiZcbiAgICAgICAgdGhpcy5oaXREaXJlY3Rpb24gIT09IG51bGwgJiZcbiAgICAgICAgdGhpcy5kaWRMYXN0U2hvdEhpdFxuICAgICAgKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdBdHRhY2tpbmcgc2hpcCBvbiBheGlzIGFuZCBkaXJlY3Rpb24nKTtcbiAgICAgICAgbmV4dFNob3QgPSB0aGlzLnNob3RJZlNoaXBJc0hpdFR3aWNlKGVuZW15UGxheWVyKTtcbiAgICAgICAgY29uc3QgYXR0YWNrUmVzcG9uc2UgPSB0aGlzLmF0dGFja0VuZW15KG5leHRTaG90LCBlbmVteVBsYXllcik7XG4gICAgICAgIHJldHVybiB7IG5leHRTaG90LCBhdHRhY2tSZXNwb25zZSB9O1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5kaWRMYXN0U2hvdEhpdCB8fCB0aGlzLnBvc3NpYmxlU2hvdHNJZkxhc3RIaXQgIT09IG51bGwpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ0F0dGFja2luZyBvbiBzZWFyY2ggcGF0dGVybicpO1xuICAgICAgICBpZiAodGhpcy5wb3NzaWJsZVNob3RzSWZMYXN0SGl0ID09PSBudWxsKSB7XG4gICAgICAgICAgdGhpcy5wb3NzaWJsZVNob3RzSWZMYXN0SGl0ID0gW1xuICAgICAgICAgICAgW3RoaXMubGFzdFNob3RDb29yZHNbMF0gKyAxLCB0aGlzLmxhc3RTaG90Q29vcmRzWzFdXSxcbiAgICAgICAgICAgIFt0aGlzLmxhc3RTaG90Q29vcmRzWzBdIC0gMSwgdGhpcy5sYXN0U2hvdENvb3Jkc1sxXV0sXG4gICAgICAgICAgICBbdGhpcy5sYXN0U2hvdENvb3Jkc1swXSwgdGhpcy5sYXN0U2hvdENvb3Jkc1sxXSArIDFdLFxuICAgICAgICAgICAgW3RoaXMubGFzdFNob3RDb29yZHNbMF0sIHRoaXMubGFzdFNob3RDb29yZHNbMV0gLSAxXSxcbiAgICAgICAgICBdLmZpbHRlcihcbiAgICAgICAgICAgICh2YWx1ZSkgPT5cbiAgICAgICAgICAgICAgdmFsdWVbMF0gPiAwICYmIHZhbHVlWzBdIDwgMTEgJiYgdmFsdWVbMV0gPiAwICYmIHZhbHVlWzFdIDwgMTFcbiAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgbmV4dFNob3QgPSB0aGlzLnNob3RJZkxvb2tpbmdGb3JTZWNvbmRIaXQoZW5lbXlQbGF5ZXIpO1xuICAgICAgICBjb25zdCBhdHRhY2tSZXNwb25zZSA9IHRoaXMuYXR0YWNrRW5lbXkobmV4dFNob3QsIGVuZW15UGxheWVyKTtcbiAgICAgICAgaWYgKGF0dGFja1Jlc3BvbnNlLmlzSGl0KSB0aGlzLm11dGF0ZVBsYXllck9iamVjdE9uSGl0KCk7XG4gICAgICAgIHJldHVybiB7IG5leHRTaG90LCBhdHRhY2tSZXNwb25zZSB9O1xuICAgICAgfVxuXG4gICAgICAvLyAqIE5vIGhpdCwgbm8gc2hpcCBpbiBzaW5raW5nLCByYW5kb20gc2hvdFxuICAgICAgaWYgKCF0aGlzLmRpZExhc3RTaG90SGl0ICYmIHRoaXMucG9zc2libGVTaG90c0lmTGFzdEhpdCA9PT0gbnVsbCkge1xuICAgICAgICBjb25zb2xlLmxvZygnUkFORE9NIFNIT1QnKTtcblxuICAgICAgICBuZXh0U2hvdCA9IHRoaXMucmFuZG9tU2hvdChlbmVteVBsYXllcik7XG4gICAgICAgIGNvbnN0IGF0dGFja1Jlc3BvbnNlID0gdGhpcy5hdHRhY2tFbmVteShuZXh0U2hvdCwgZW5lbXlQbGF5ZXIpO1xuICAgICAgICByZXR1cm4geyBuZXh0U2hvdCwgYXR0YWNrUmVzcG9uc2UgfTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc2hvdElmRW5kT2ZTaGlwQnV0Tm90U3VuaygpIHtcbiAgICAgIGxldCBuZXh0U2hvdDtcblxuICAgICAgaWYgKHRoaXMuaGl0RGlyZWN0aW9uID09PSAncG9zaXRpdmUnKSB7XG4gICAgICAgIHRoaXMuaGl0RGlyZWN0aW9uID0gJ25lZ2F0aXZlJztcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5oaXREaXJlY3Rpb24gPT09ICduZWdhdGl2ZScpIHtcbiAgICAgICAgdGhpcy5oaXREaXJlY3Rpb24gPSAncG9zaXRpdmUnO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5oaXRBeGlzID09PSAnWCcpIHtcbiAgICAgICAgaWYgKHRoaXMuaGl0RGlyZWN0aW9uID09PSAncG9zaXRpdmUnKSB7XG4gICAgICAgICAgbmV4dFNob3QgPSBbdGhpcy5maXJzdEhpdENvb3Jkc1swXSArIDEsIHRoaXMuZmlyc3RIaXRDb29yZHNbMV1dO1xuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuaGl0RGlyZWN0aW9uID09PSAnbmVnYXRpdmUnKSB7XG4gICAgICAgICAgbmV4dFNob3QgPSBbdGhpcy5maXJzdEhpdENvb3Jkc1swXSAtIDEsIHRoaXMuZmlyc3RIaXRDb29yZHNbMV1dO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaGl0QXhpcyA9PT0gJ1knKSB7XG4gICAgICAgIGlmICh0aGlzLmhpdERpcmVjdGlvbiA9PT0gJ3Bvc2l0aXZlJykge1xuICAgICAgICAgIG5leHRTaG90ID0gW3RoaXMuZmlyc3RIaXRDb29yZHNbMF0sIHRoaXMuZmlyc3RIaXRDb29yZHNbMV0gKyAxXTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmhpdERpcmVjdGlvbiA9PT0gJ25lZ2F0aXZlJykge1xuICAgICAgICAgIG5leHRTaG90ID0gW3RoaXMuZmlyc3RIaXRDb29yZHNbMF0sIHRoaXMuZmlyc3RIaXRDb29yZHNbMV0gLSAxXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG5leHRTaG90O1xuICAgIH0sXG5cbiAgICBzaG90SWZTaGlwSXNIaXRUd2ljZShlbmVteVBsYXllcikge1xuICAgICAgbGV0IG5leHRTaG90O1xuICAgICAgaWYgKHRoaXMuaGl0QXhpcyA9PT0gJ1gnKSB7XG4gICAgICAgIGlmICh0aGlzLmhpdERpcmVjdGlvbiA9PT0gJ3Bvc2l0aXZlJykge1xuICAgICAgICAgIG5leHRTaG90ID0gW3RoaXMubGFzdFNob3RDb29yZHNbMF0gKyAxLCB0aGlzLmxhc3RTaG90Q29vcmRzWzFdXTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmhpdERpcmVjdGlvbiA9PT0gJ25lZ2F0aXZlJykge1xuICAgICAgICAgIG5leHRTaG90ID0gW3RoaXMubGFzdFNob3RDb29yZHNbMF0gLSAxLCB0aGlzLmxhc3RTaG90Q29vcmRzWzFdXTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh0aGlzLmhpdEF4aXMgPT09ICdZJykge1xuICAgICAgICBpZiAodGhpcy5oaXREaXJlY3Rpb24gPT09ICdwb3NpdGl2ZScpIHtcbiAgICAgICAgICBuZXh0U2hvdCA9IFt0aGlzLmxhc3RTaG90Q29vcmRzWzBdLCB0aGlzLmxhc3RTaG90Q29vcmRzWzFdICsgMV07XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5oaXREaXJlY3Rpb24gPT09ICduZWdhdGl2ZScpIHtcbiAgICAgICAgICBuZXh0U2hvdCA9IFt0aGlzLmxhc3RTaG90Q29vcmRzWzBdLCB0aGlzLmxhc3RTaG90Q29vcmRzWzFdIC0gMV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLmlzTmV4dFNob3RBbHJlYWR5RG9uZShuZXh0U2hvdCwgZW5lbXlQbGF5ZXIpKSB7XG4gICAgICAgIG5leHRTaG90ID0gdGhpcy5zaG90SWZFbmRPZlNoaXBCdXROb3RTdW5rKCk7XG4gICAgICB9XG4gICAgICBpZiAoXG4gICAgICAgIG5leHRTaG90WzBdIDwgMSB8fFxuICAgICAgICBuZXh0U2hvdFswXSA+IDEwIHx8XG4gICAgICAgIG5leHRTaG90WzFdIDwgMSB8fFxuICAgICAgICBuZXh0U2hvdFsxXSA+IDEwXG4gICAgICApIHtcbiAgICAgICAgbmV4dFNob3QgPSB0aGlzLnNob3RJZkxvb2tpbmdGb3JTZWNvbmRIaXQoZW5lbXlQbGF5ZXIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5leHRTaG90O1xuICAgIH0sXG5cbiAgICBzaG90SWZMb29raW5nRm9yU2Vjb25kSGl0KGVuZW15UGxheWVyKSB7XG4gICAgICBsZXQgbmV4dFNob3Q7XG4gICAgICBpZiAodGhpcy5maXJzdEhpdENvb3JkcyA9PT0gbnVsbClcbiAgICAgICAgdGhpcy5maXJzdEhpdENvb3JkcyA9IHRoaXMubGFzdFNob3RDb29yZHM7XG4gICAgICBpZiAodGhpcy5wb3NzaWJsZVNob3RzSWZMYXN0SGl0Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBuZXh0U2hvdCA9IHRoaXMucmFuZG9tU2hvdCgpO1xuICAgICAgICByZXR1cm4gbmV4dFNob3Q7XG4gICAgICB9XG4gICAgICBuZXh0U2hvdCA9IHRoaXMucG9zc2libGVTaG90c0lmTGFzdEhpdC5zcGxpY2UoXG4gICAgICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMucG9zc2libGVTaG90c0lmTGFzdEhpdC5sZW5ndGgpLFxuICAgICAgICAxXG4gICAgICApO1xuICAgICAgd2hpbGUgKHRoaXMuaXNOZXh0U2hvdEFscmVhZHlEb25lKG5leHRTaG90WzBdLCBlbmVteVBsYXllcikpIHtcbiAgICAgICAgbmV4dFNob3QgPSB0aGlzLnBvc3NpYmxlU2hvdHNJZkxhc3RIaXQuc3BsaWNlKFxuICAgICAgICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMucG9zc2libGVTaG90c0lmTGFzdEhpdC5sZW5ndGgpLFxuICAgICAgICAgIDFcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBuZXh0U2hvdFswXTtcbiAgICB9LFxuXG4gICAgcmFuZG9tU2hvdChlbmVteVBsYXllcikge1xuICAgICAgbGV0IG5leHRTaG90ID0gdGhpcy5jYWxjdWxhdGVOZXh0U2hvdENvb3JkcygpO1xuXG4gICAgICB3aGlsZSAodGhpcy5pc05leHRTaG90QWxyZWFkeURvbmUobmV4dFNob3QsIGVuZW15UGxheWVyKSkge1xuICAgICAgICBuZXh0U2hvdCA9IHRoaXMuY2FsY3VsYXRlTmV4dFNob3RDb29yZHMoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBuZXh0U2hvdDtcbiAgICB9LFxuXG4gICAgbXV0YXRlUGxheWVyT2JqZWN0QWZ0ZXJTaW5raW5nU2hpcCgpIHtcbiAgICAgIHRoaXMuZGlkTGFzdFNob3RIaXQgPSBmYWxzZTtcbiAgICAgIHRoaXMucG9zc2libGVTaG90c0lmTGFzdEhpdCA9IG51bGw7XG4gICAgICB0aGlzLmZpcnN0SGl0Q29vcmRzID0gbnVsbDtcbiAgICAgIHRoaXMuaGl0QXhpcyA9IG51bGw7XG4gICAgICB0aGlzLmhpdERpcmVjdGlvbiA9IG51bGw7XG4gICAgfSxcblxuICAgIG11dGF0ZVBsYXllck9iamVjdE9uSGl0KCkge1xuICAgICAgY29uc29sZS5sb2coJ01VVEFUSU5HIE9CSkVDVCcpO1xuICAgICAgaWYgKHRoaXMuZGlkTGFzdFNob3RIaXQpIHtcbiAgICAgICAgY29uc3QgaGl0RGlyRGF0YSA9IFtcbiAgICAgICAgICB0aGlzLmZpcnN0SGl0Q29vcmRzWzBdIC0gdGhpcy5sYXN0U2hvdENvb3Jkc1swXSxcbiAgICAgICAgICB0aGlzLmZpcnN0SGl0Q29vcmRzWzFdIC0gdGhpcy5sYXN0U2hvdENvb3Jkc1sxXSxcbiAgICAgICAgXTtcbiAgICAgICAgaWYgKGhpdERpckRhdGFbMF0gIT09IDApIHtcbiAgICAgICAgICB0aGlzLmhpdEF4aXMgPSAnWCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5oaXRBeGlzID0gJ1knO1xuICAgICAgICB9XG4gICAgICAgIGlmIChoaXREaXJEYXRhWzBdID09PSAtMSB8fCBoaXREaXJEYXRhWzFdID09PSAtMSkge1xuICAgICAgICAgIHRoaXMuaGl0RGlyZWN0aW9uID0gJ3Bvc2l0aXZlJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmhpdERpcmVjdGlvbiA9ICduZWdhdGl2ZSc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgY2FsY3VsYXRlTmV4dFNob3RDb29yZHMoKSB7XG4gICAgICByZXR1cm4gW1xuICAgICAgICB0aGlzLmdldFJhbmRvbU51bUJldHdlZW4xQW5kMTAoKSxcbiAgICAgICAgdGhpcy5nZXRSYW5kb21OdW1CZXR3ZWVuMUFuZDEwKCksXG4gICAgICBdO1xuICAgIH0sXG5cbiAgICBjYWxjdWxhdGVSYW5kb21Db29yZHMoKSB7XG4gICAgICByZXR1cm4gW1xuICAgICAgICB0aGlzLmdldFJhbmRvbU51bUJldHdlZW4xQW5kMTAoKSxcbiAgICAgICAgdGhpcy5nZXRSYW5kb21OdW1CZXR3ZWVuMUFuZDEwKCksXG4gICAgICBdO1xuICAgIH0sXG5cbiAgICBjYWxjdWxhdGVSYW5kb21BeGlzKCkge1xuICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDIpID8gJ1gnIDogJ1knO1xuICAgIH0sXG5cbiAgICBpc05leHRTaG90QWxyZWFkeURvbmUoc2hvdENvb3JkcywgZW5lbXlQbGF5ZXIpIHtcbiAgICAgIGxldCBpc1Nob3RBbHJlYWR5RG9uZSA9IGZhbHNlO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbmVteVBsYXllci5nYW1lYm9hcmQubWlzc2VkSGl0cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgZW5lbXlQbGF5ZXIuZ2FtZWJvYXJkLm1pc3NlZEhpdHNbaV1bMF0gPT09IHNob3RDb29yZHNbMF0gJiZcbiAgICAgICAgICBlbmVteVBsYXllci5nYW1lYm9hcmQubWlzc2VkSGl0c1tpXVsxXSA9PT0gc2hvdENvb3Jkc1sxXVxuICAgICAgICApIHtcbiAgICAgICAgICBpc1Nob3RBbHJlYWR5RG9uZSA9IHRydWU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gaXNTaG90QWxyZWFkeURvbmU7XG4gICAgfSxcblxuICAgIGdldFJhbmRvbU51bUJldHdlZW4xQW5kMTAoKSB7XG4gICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApICsgMTtcbiAgICB9LFxuICB9O1xufVxuIl0sIm5hbWVzIjpbIkdhbWVib2FyZCIsIlBsYXllciIsIm5hbWUiLCJpc0NvbXB1dGVyIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiZGlkTGFzdFNob3RIaXQiLCJsYXN0U2hvdENvb3JkcyIsInBvc3NpYmxlU2hvdHNJZkxhc3RIaXQiLCJmaXJzdEhpdENvb3JkcyIsImhpdEF4aXMiLCJoaXREaXJlY3Rpb24iLCJpc015VHVybiIsImdhbWVib2FyZCIsImF0dGFja0VuZW15IiwiYXR0YWNrQ29vcmRzIiwiZW5lbXlQbGF5ZXIiLCJhdHRhY2tSZXNwb25zZSIsInJlY2VpdmVBdHRhY2siLCJpc0hpdCIsImRpZFNpbmsiLCJtdXRhdGVQbGF5ZXJPYmplY3RBZnRlclNpbmtpbmdTaGlwIiwicGxhY2VTaGlwc1JhbmRvbWx5IiwiaSIsInN0YXJ0Q29vcmQiLCJjYWxjdWxhdGVSYW5kb21Db29yZHMiLCJheGlzIiwiY2FsY3VsYXRlUmFuZG9tQXhpcyIsImRldGVybWluZUlmU2hpcElzT25HYW1lYm9hcmQiLCJkZXRlcm1pbmVJZlNoaXBJc09uQW5vdGhlclNoaXAiLCJwbGFjZVNoaXAiLCJjb25zb2xlIiwibG9nIiwiY29tcHV0ZXJTaG90IiwibmV4dFNob3QiLCJzaG90SWZFbmRPZlNoaXBCdXROb3RTdW5rIiwiaXNOZXh0U2hvdEFscmVhZHlEb25lIiwic2hvdElmTG9va2luZ0ZvclNlY29uZEhpdCIsInNob3RJZlNoaXBJc0hpdFR3aWNlIiwiZmlsdGVyIiwidmFsdWUiLCJtdXRhdGVQbGF5ZXJPYmplY3RPbkhpdCIsInJhbmRvbVNob3QiLCJzcGxpY2UiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJjYWxjdWxhdGVOZXh0U2hvdENvb3JkcyIsImhpdERpckRhdGEiLCJnZXRSYW5kb21OdW1CZXR3ZWVuMUFuZDEwIiwic2hvdENvb3JkcyIsImlzU2hvdEFscmVhZHlEb25lIiwibWlzc2VkSGl0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/player.js\n");

/***/ }),

/***/ "./src/ships.js":
/*!**********************!*\
  !*** ./src/ships.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ship\": () => (/* binding */ Ship)\n/* harmony export */ });\nfunction Ship(length, team, type, coordinates, axis) {\n  return {\n    team,\n    type,\n    id: `${type.toLowerCase()}-${team}`,\n    length,\n    startCoordinates: coordinates,\n    axis,\n    numberOfHits: 0,\n    hit() {\n      this.numberOfHits += 1;\n    },\n    isSunk() {\n      if (this.numberOfHits >= length) return true;\n      return false;\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hpcHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLElBQUlBLENBQUNDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLFdBQVcsRUFBRUMsSUFBSSxFQUFFO0VBQzFELE9BQU87SUFDTEgsSUFBSTtJQUNKQyxJQUFJO0lBQ0pHLEVBQUUsRUFBRyxHQUFFSCxJQUFJLENBQUNJLFdBQVcsRUFBRyxJQUFHTCxJQUFLLEVBQUM7SUFDbkNELE1BQU07SUFDTk8sZ0JBQWdCLEVBQUVKLFdBQVc7SUFDN0JDLElBQUk7SUFDSkksWUFBWSxFQUFFLENBQUM7SUFDZkMsR0FBR0EsQ0FBQSxFQUFHO01BQ0osSUFBSSxDQUFDRCxZQUFZLElBQUksQ0FBQztJQUN4QixDQUFDO0lBQ0RFLE1BQU1BLENBQUEsRUFBRztNQUNQLElBQUksSUFBSSxDQUFDRixZQUFZLElBQUlSLE1BQU0sRUFBRSxPQUFPLElBQUk7TUFDNUMsT0FBTyxLQUFLO0lBQ2Q7RUFDRixDQUFDO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3NoaXBzLmpzPzVkNWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIFNoaXAobGVuZ3RoLCB0ZWFtLCB0eXBlLCBjb29yZGluYXRlcywgYXhpcykge1xuICByZXR1cm4ge1xuICAgIHRlYW0sXG4gICAgdHlwZSxcbiAgICBpZDogYCR7dHlwZS50b0xvd2VyQ2FzZSgpfS0ke3RlYW19YCxcbiAgICBsZW5ndGgsXG4gICAgc3RhcnRDb29yZGluYXRlczogY29vcmRpbmF0ZXMsXG4gICAgYXhpcyxcbiAgICBudW1iZXJPZkhpdHM6IDAsXG4gICAgaGl0KCkge1xuICAgICAgdGhpcy5udW1iZXJPZkhpdHMgKz0gMTtcbiAgICB9LFxuICAgIGlzU3VuaygpIHtcbiAgICAgIGlmICh0aGlzLm51bWJlck9mSGl0cyA+PSBsZW5ndGgpIHJldHVybiB0cnVlO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sXG4gIH07XG59XG4iXSwibmFtZXMiOlsiU2hpcCIsImxlbmd0aCIsInRlYW0iLCJ0eXBlIiwiY29vcmRpbmF0ZXMiLCJheGlzIiwiaWQiLCJ0b0xvd2VyQ2FzZSIsInN0YXJ0Q29vcmRpbmF0ZXMiLCJudW1iZXJPZkhpdHMiLCJoaXQiLCJpc1N1bmsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ships.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;