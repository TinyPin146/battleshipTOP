/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/gameLoop.js":
/*!*************************!*\
  !*** ./src/gameLoop.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setUpPlayers\": () => (/* binding */ setUpPlayers),\n/* harmony export */   \"startGameLoop\": () => (/* binding */ startGameLoop)\n/* harmony export */ });\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player.js */ \"./src/player.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"./src/index.js\");\n\n\nlet player1 = null;\nlet player2 = null;\nfunction setUpPlayers(Player1, Player2, isPlayer2Computer) {\n  let player2Name = Player2;\n  if (!Player1 || !Player2 && !isPlayer2Computer) return;\n  if (player1 !== null || player2 !== null) return;\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addHiddenClassToElement)(document.querySelector('.gamestart-form'));\n  if (isPlayer2Computer) player2Name = 'AI';\n  player1 = new _player_js__WEBPACK_IMPORTED_MODULE_0__.Player(Player1);\n  player2 = new _player_js__WEBPACK_IMPORTED_MODULE_0__.Player(player2Name, isPlayer2Computer);\n  const player1GameboardHTML = player1.gameboard.createGameboardHTML(player1.name);\n  const player1ShipTrackerHTML = player1.gameboard.createShipTrackingHTML(player1.name);\n  const player2Gameboard = player2.gameboard.createGameboardHTML(player2.name);\n  const player2ShipTrackerHTML = player2.gameboard.createShipTrackingHTML(player2.name);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createPlayerAreaInDOM)(player1);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addGameboardToDOMForPlayer)(player1, player1GameboardHTML);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addShipTrackerToDOMForPlayer)(player1, player1ShipTrackerHTML);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createPlayerAreaInDOM)(player2);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addGameboardToDOMForPlayer)(player2, player2Gameboard);\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addShipTrackerToDOMForPlayer)(player2, player2ShipTrackerHTML);\n  if (isPlayer2Computer) player2.placeShipsRandomly();\n}\nfunction startGameLoop() {\n  if (player1.gameboard.ships.length === 5 && player2.gameboard.ships.length === 5) {\n    gameLoop();\n    return true;\n  }\n  return false;\n}\nfunction gameLoop() {\n  takeTurns();\n  if (player2.isComputer) {\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addEventlistenersToPlayerGameboard)(player2, humanShot);\n  } else {\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addEventlistenersToPlayerGameboard)(player2, humanShot);\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addEventlistenersToPlayerGameboard)(player1, humanShot);\n  }\n}\nfunction takeTurns() {\n  if (!player1 || !player2) return;\n  if (player1.isMyTurn === null && player2.isMyTurn === null) {\n    player1.isMyTurn = true;\n    player2.isMyTurn = false;\n  } else {\n    player1.isMyTurn = !player1.isMyTurn;\n    player2.isMyTurn = !player2.isMyTurn;\n  }\n  if (!player1.isComputer && !player2.isComputer) {\n    if (player1.isMyTurn) {\n      console.log('Player 1 ship hiding');\n      (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.hideShipsOnGameboard)(player2);\n      setTimeout(() => {\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.showShipsOnGameboard)(player1);\n      }, 2000);\n    }\n    if (player2.isMyTurn) {\n      console.log('Player 2 ship hiding');\n      (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.hideShipsOnGameboard)(player1);\n      setTimeout(() => {\n        (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.showShipsOnGameboard)(player2);\n      }, 2000);\n    }\n  }\n  if (player2.isComputer) {\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.showShipsOnGameboard)(player1);\n  }\n}\nfunction checkIfGameEnded() {\n  if (player1.gameboard.areAllShipsSunk()) {\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.removeEventlistenersToPlayerGameboard)(player2, humanShot);\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.showEndOfGameScreen)(player2.name);\n  }\n  if (player2.gameboard.areAllShipsSunk()) {\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.removeEventlistenersToPlayerGameboard)(player2, humanShot);\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.showEndOfGameScreen)(player1.name);\n  }\n  if (player1.gameboard.areAllShipsSunk() || player2.gameboard.areAllShipsSunk()) {\n    player1 = null;\n    player2 = null;\n  }\n}\nfunction humanShot(e, enemyPlayer) {\n  const player = enemyPlayer === player1 ? player2 : player1;\n  if (!player.isMyTurn) return;\n  const shot = [Number(e.currentTarget.dataset.xCoord), Number(e.currentTarget.dataset.yCoord)];\n  const attackResult = player.attackEnemy(shot, enemyPlayer);\n  if (attackResult === null) {\n    console.log('Shot already taken');\n    return;\n  }\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.mutatePlayerGameboardAfterAttack)(enemyPlayer, shot, attackResult);\n  checkIfGameEnded();\n  takeTurns();\n  if (player2.isComputer) {\n    setTimeout(() => {\n      computerShot();\n    }, Math.floor(Math.random() * 350));\n  }\n}\nasync function computerShot() {\n  if (!player2 || !player2.isComputer || !player2.isMyTurn) return;\n  const computerShotData = player2.computerShot(player1);\n  console.log({\n    compShot: computerShotData.nextShot\n  });\n  (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.mutatePlayerGameboardAfterAttack)(player1, computerShotData.nextShot, computerShotData.attackResponse);\n  checkIfGameEnded();\n  takeTurns();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/gameLoop.js\n");

/***/ }),

/***/ "./src/gameboard.js":
/*!**************************!*\
  !*** ./src/gameboard.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Gameboard\": () => (/* binding */ Gameboard)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./src/index.js\");\n/* harmony import */ var _ships_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ships.js */ \"./src/ships.js\");\n\n\nfunction Gameboard() {\n  return {\n    ships: [],\n    missedHits: [],\n    areAllShipsSunk() {\n      const statusOfShips = [];\n      this.ships.forEach(ship => {\n        statusOfShips.push(ship.isSunk());\n      });\n      return statusOfShips.every(status => status === true);\n    },\n    placeShip(length, team, type, coordinates, axis) {\n      this.ships.push(new _ships_js__WEBPACK_IMPORTED_MODULE_1__.Ship(length, team, type, coordinates, axis));\n    },\n    receiveAttack(attackCoords) {\n      if (this.determineIfArrayIsInArrayOfArrays(attackCoords, this.missedHits)) return null;\n      let isHit = false;\n      let didSink = null;\n      let instShip = null;\n      this.ships.forEach(ship => {\n        const shipCoords = this.getShipCoords(ship);\n        for (let i = 0; i < shipCoords.length; i += 1) {\n          if (shipCoords[i][0] === attackCoords[0] && shipCoords[i][1] === attackCoords[1]) {\n            ship.hit();\n            isHit = true;\n            didSink = ship.isSunk();\n            instShip = ship;\n            break;\n          }\n        }\n      });\n      this.missedHits.push(attackCoords);\n      if (didSink) (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.trackSunkenShip)(instShip);\n      return {\n        isHit,\n        didSink\n      };\n    },\n    getAllShipCoords() {\n      const allShipsCoords = [];\n      this.ships.forEach(ship => {\n        const shipCoords = this.getShipCoords(ship);\n        allShipsCoords.push(shipCoords);\n      });\n      return allShipsCoords;\n    },\n    getShipCoords(ship) {\n      const shipCoords = [];\n      for (let i = 0; i < ship.length; i += 1) {\n        if (ship.axis === 'X') {\n          shipCoords.push([ship.startCoordinates[0] + i, ship.startCoordinates[1]]);\n        } else {\n          shipCoords.push([ship.startCoordinates[0], ship.startCoordinates[1] + i]);\n        }\n      }\n      return shipCoords;\n    },\n    determineIfShipIsOnGameboard(length, startCoord, axis) {\n      let isShipOnBoard = true;\n      const shipCoords = this.getAShipsCoordinates(length, startCoord, axis);\n      shipCoords.forEach(coord => {\n        if (coord[0] > 10 || coord[0] < 1 || coord[1] > 10 || coord[1] < 1) {\n          isShipOnBoard = false;\n        }\n      });\n      return isShipOnBoard;\n    },\n    determineIfShipIsOnAnotherShip(length, startCoord, axis) {\n      let isShipOnAnotherShip = false;\n      const shipCoords = this.getAShipsCoordinates(length, startCoord, axis);\n      const createdShipCoords = this.getAllShipCoords().flat();\n      for (let i = 0; i < shipCoords.length; i += 1) {\n        for (let j = 0; j < createdShipCoords.length; j += 1) {\n          if (shipCoords[i][0] === createdShipCoords[j][0] && shipCoords[i][1] === createdShipCoords[j][1] || shipCoords[i][0] === createdShipCoords[j][0] + 1 && shipCoords[i][1] === createdShipCoords[j][1] || shipCoords[i][0] === createdShipCoords[j][0] - 1 && shipCoords[i][1] === createdShipCoords[j][1] || shipCoords[i][0] === createdShipCoords[j][0] && shipCoords[i][1] === createdShipCoords[j][1] + 1 || shipCoords[i][0] === createdShipCoords[j][0] && shipCoords[i][1] === createdShipCoords[j][1] - 1) {\n            isShipOnAnotherShip = true;\n            break;\n          }\n        }\n      }\n      return isShipOnAnotherShip;\n    },\n    getAShipsCoordinates(length, startCoord, axis) {\n      const shipCoords = [];\n      for (let i = 0; i <= length; i += 1) {\n        if (axis === 'X') {\n          shipCoords.push([startCoord[0] + i, startCoord[1]]);\n        } else {\n          shipCoords.push([startCoord[0], startCoord[1] + i]);\n        }\n      }\n      return shipCoords;\n    },\n    determineIfArrayIsInArrayOfArrays(inputArr, arr) {\n      let inputArrIsInArr = false;\n      arr.forEach(value => {\n        if (value[0] === inputArr[0] && value[1] === inputArr[1]) inputArrIsInArr = !inputArrIsInArr;\n      });\n      return inputArrIsInArr;\n    },\n    createGameboardHTML(name) {\n      let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      let width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n      const gameboardParent = document.createElement('div');\n      gameboardParent.classList.add(`gameboard-parent-${name}`, 'gameboard-parent');\n      for (let i = 10; i >= height - (height - 1); i -= 1) {\n        for (let j = 1; j <= width; j += 1) {\n          const gameboardElement = document.createElement('div');\n          gameboardElement.classList.add('gameboard-element', `gameboard-element-${name}`);\n          gameboardElement.setAttribute('data-X-coord', j);\n          gameboardElement.setAttribute('data-Y-coord', i);\n          if (i === 1) {\n            gameboardElement.classList.add('gameboard-element-bottom-row');\n          }\n          if (j === 10) {\n            gameboardElement.classList.add('gameboard-element-right-row');\n          }\n          gameboardParent.insertAdjacentElement('beforeend', gameboardElement);\n        }\n      }\n      return gameboardParent;\n    },\n    createShipTrackingHTML(name) {\n      if (name === 'AI') {\n        return `\n        <ul class=\"ship-tracking ship-tracking-${name}\">\n        <li class=\"ship carrier carrier-${name}\">Carrier     \n        </li>\n        <li class=\"ship battleship battleship-${name}\">Battleship\n        </li>\n        <li class=\"ship cruiser cruiser-${name}\">Cruiser\n        </li>\n        <li class=\"ship submarine submarine-${name}\">Submarine\n        </li>\n        <li class=\"ship destroyer destroyer-${name}\">Destroyer\n        </li>\n      </ul>\n\n        `;\n      }\n      return `\n        <ul class=\"ship-tracking ship-tracking-${name}\">\n          <li class=\"ship carrier carrier-${name}\">Carrier     \n            <div class=\"draggable carrier-draggable\" data-length=\"5\" data-shipType=\"Carrier\" draggable=\"true\">\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n            </div>\n          </li>\n          <li class=\"ship battleship battleship-${name}\">Battleship\n            <div class=\"draggable battleship-draggable\" data-length=\"4\" data-shipType=\"Battleship\" draggable=\"true\">\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n            </div>\n          </li>\n          <li class=\"ship cruiser cruiser-${name}\">Cruiser\n            <div class=\"draggable cruiser-draggable\" data-length=\"3\" data-shipType=\"Cruiser\" draggable=\"true\">\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n            </div>\n          </li>\n          <li class=\"ship submarine submarine-${name}\">Submarine\n            <div class=\"draggable submarine-draggable\" data-length=\"3\" data-shipType=\"Submarine\" draggable=\"true\">\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n            </div>\n          </li>\n          <li class=\"ship destroyer destroyer-${name}\">Destroyer\n            <div class=\"draggable destroyer-draggable\" data-length=\"2\" data-shipType=\"Destroyer\" draggable=\"true\">\n              <div class=\"ship-block ship-shown\"></div>\n              <div class=\"ship-block ship-shown\"></div>\n            </div>\n          </li>\n        </ul>\n      `;\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/gameboard.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addEventlistenersToPlayerGameboard\": () => (/* binding */ addEventlistenersToPlayerGameboard),\n/* harmony export */   \"addGameboardToDOMForPlayer\": () => (/* binding */ addGameboardToDOMForPlayer),\n/* harmony export */   \"addHiddenClassToElement\": () => (/* binding */ addHiddenClassToElement),\n/* harmony export */   \"addShipTrackerToDOMForPlayer\": () => (/* binding */ addShipTrackerToDOMForPlayer),\n/* harmony export */   \"createPlayerAreaInDOM\": () => (/* binding */ createPlayerAreaInDOM),\n/* harmony export */   \"hideShipsOnGameboard\": () => (/* binding */ hideShipsOnGameboard),\n/* harmony export */   \"mutatePlayerGameboardAfterAttack\": () => (/* binding */ mutatePlayerGameboardAfterAttack),\n/* harmony export */   \"removeEventlistenersToPlayerGameboard\": () => (/* binding */ removeEventlistenersToPlayerGameboard),\n/* harmony export */   \"showEndOfGameScreen\": () => (/* binding */ showEndOfGameScreen),\n/* harmony export */   \"showShipsOnGameboard\": () => (/* binding */ showShipsOnGameboard),\n/* harmony export */   \"trackSunkenShip\": () => (/* binding */ trackSunkenShip)\n/* harmony export */ });\n/* harmony import */ var _gameLoop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameLoop.js */ \"./src/gameLoop.js\");\n\nconst player1NameInput = document.querySelector('#player1');\nconst player2NameInput = document.querySelector('#player2');\nconst startGameWithAIBtn = document.querySelector('.start-game-AI-btn');\nconst startGameWithPlayerBtn = document.querySelector('.start-game-player-btn');\nconst PLAYER_AREA_CLASS_NAME = 'player-area-';\nfunction createPlayerAreaInDOM(player) {\n  const main = document.querySelector('main');\n  const playerAreaHTMLElement = document.createElement('div');\n  playerAreaHTMLElement.classList.add(`${PLAYER_AREA_CLASS_NAME}${player.name}`, 'player-area');\n  const axisBtn = document.createElement('button');\n  axisBtn.setAttribute('data-axis', 'X');\n  axisBtn.classList.add('axis-selector-btn', 'button', 'center');\n  axisBtn.textContent = 'Axis: X';\n  if (!document.querySelector('.axis-selector-btn')) {\n    main.insertAdjacentElement('afterbegin', axisBtn);\n  }\n  axisBtn.addEventListener('click', setAxis);\n  main.insertAdjacentElement('beforeend', playerAreaHTMLElement);\n}\nfunction addGameboardToDOMForPlayer(player, gameboard) {\n  document.querySelector(`.${PLAYER_AREA_CLASS_NAME}${player.name}`).insertAdjacentElement('beforeend', gameboard);\n}\nfunction addShipTrackerToDOMForPlayer(player, tracker) {\n  const playerArea = document.querySelector(`.${PLAYER_AREA_CLASS_NAME}${player.name}`);\n  playerArea.insertAdjacentHTML('beforeend', tracker);\n  const gameboardGrids = playerArea.querySelectorAll('.gameboard-element');\n  const shipDraggables = playerArea.querySelectorAll('.draggable');\n  shipDraggables.forEach(draggable => {\n    draggable.addEventListener('dragstart', shipDragStart);\n  });\n  shipDraggables.forEach(draggable => {\n    draggable.addEventListener('dragend', shipDragEnd);\n  });\n  gameboardGrids.forEach(grid => {\n    grid.addEventListener('dragover', e => {\n      e.preventDefault();\n    });\n  });\n  gameboardGrids.forEach(grid => {\n    grid.addEventListener('drop', e => {\n      dropOnGrid(e, player);\n    });\n  });\n}\nfunction shipDragStart(e) {\n  // !\n  this.classList.toggle('hold');\n  requestAnimationFrame(() => {\n    this.classList.toggle('hidden');\n  });\n  e.dataTransfer.setData('shipLength', this.dataset.length);\n  e.dataTransfer.setData('shipType', this.dataset.shiptype);\n  e.dataTransfer.setData('shipElem', this);\n}\nfunction shipDragEnd(e) {\n  // !\n  console.log(e);\n  this.classList.toggle('hold');\n  this.classList.toggle('hidden');\n}\nfunction dropOnGrid(e, player) {\n  const shipLength = Number(e.dataTransfer.getData('shipLength'));\n  const shiptType = e.dataTransfer.getData('shipType');\n  const axisBtn = document.querySelector('.axis-selector-btn');\n  const {\n    axis\n  } = axisBtn.dataset;\n  const shipListItemElem = document.querySelector(`.${shiptType.toLowerCase()}-${player.name}`);\n  let xCoord = Number(e.currentTarget.dataset.xCoord);\n  let yCoord = Number(e.currentTarget.dataset.yCoord);\n  if (axis === 'X' && xCoord + shipLength > 10) {\n    xCoord = 10 - shipLength + 1;\n  }\n  if (axis === 'Y' && yCoord + shipLength > 10) {\n    yCoord = 10 - shipLength + 1;\n  }\n  if (player.gameboard.determineIfShipIsOnAnotherShip(shipLength, [xCoord, yCoord], axis)) return;\n  player.gameboard.placeShip(shipLength, player.name, shiptType, [xCoord, yCoord], axis);\n  showShipsOnGameboard(player);\n  console.log(shipListItemElem.querySelector('div'));\n  shipListItemElem.querySelector('div').classList.add('hidden');\n  const didGameStart = (0,_gameLoop_js__WEBPACK_IMPORTED_MODULE_0__.startGameLoop)();\n  if (didGameStart) {\n    axisBtn.parentElement.removeChild(axisBtn);\n  }\n}\nfunction setAxis() {\n  const {\n    axis\n  } = this.dataset;\n  if (axis === 'X') {\n    this.textContent = 'Axis: Y';\n    this.dataset.axis = 'Y';\n  }\n  if (axis === 'Y') {\n    this.textContent = 'Axis: X';\n    this.dataset.axis = 'X';\n  }\n}\nfunction trackSunkenShip(ship) {\n  document.querySelector(`.${ship.id}`).classList.add('ship-sunken');\n}\nfunction addEventlistenersToPlayerGameboard(player, func) {\n  document.querySelectorAll(`.gameboard-element-${player.name}`).forEach(element => {\n    element.addEventListener('click', e => {\n      func(e, player);\n    });\n  });\n}\nfunction removeEventlistenersToPlayerGameboard() {\n  const oldBody = document.body;\n  const newBody = oldBody.cloneNode(true);\n  oldBody.parentNode.replaceChild(newBody, oldBody);\n}\nfunction showShipsOnGameboard(player) {\n  const playerGameArea = document.querySelector(`.${PLAYER_AREA_CLASS_NAME}${player.name}`);\n  player.gameboard.getAllShipCoords().forEach(shipCoords => {\n    shipCoords.forEach(coord => {\n      const shipElementGrid = playerGameArea.querySelector(`[data-x-coord=\"${coord[0]}\"][data-y-coord=\"${coord[1]}\"]`);\n      shipElementGrid.classList.remove('ship-hidden');\n      shipElementGrid.classList.add('ship-shown');\n    });\n  });\n}\nfunction hideShipsOnGameboard(player) {\n  const playerGameArea = document.querySelector(`.${PLAYER_AREA_CLASS_NAME}${player.name}`);\n  player.gameboard.getAllShipCoords().forEach(shipCoords => {\n    shipCoords.forEach(coord => {\n      const shipElementGrid = playerGameArea.querySelector(`[data-x-coord=\"${coord[0]}\"][data-y-coord=\"${coord[1]}\"]`);\n      shipElementGrid.classList.remove('ship-shown');\n      shipElementGrid.classList.add('ship-hidden');\n    });\n  });\n}\nfunction mutatePlayerGameboardAfterAttack(player, shot, attackResult) {\n  const gameboard = document.querySelector(`.gameboard-parent-${player.name}`);\n  const attackedGridElement = gameboard.querySelector(`[data-x-coord=\"${shot[0]}\"][data-y-coord=\"${shot[1]}\"]`);\n  if (attackResult.isHit) {\n    attackedGridElement.textContent = 'X';\n  } else {\n    attackedGridElement.style.background = 'red';\n  }\n}\nfunction showEndOfGameScreen(winner) {\n  const endGAmeModal = document.querySelector('.end-game-modal');\n  endGAmeModal.classList.toggle('hidden');\n  endGAmeModal.querySelector('.end-game-menu > h2').textContent = `The winner is ${winner}`;\n  document.querySelector('.play-again-btn').addEventListener('click', () => {\n    endGAmeModal.classList.toggle('hidden');\n    clearGameboards();\n    document.querySelector('.gamestart-form').classList.toggle('hidden');\n    const isOpponentAI = !player2NameInput.value;\n    (0,_gameLoop_js__WEBPACK_IMPORTED_MODULE_0__.setUpPlayers)(player1NameInput.value, player2NameInput.value, isOpponentAI);\n  });\n  document.querySelector('.play-again-with-other-players').addEventListener('click', () => {\n    endGAmeModal.classList.toggle('hidden');\n    clearGameboards();\n    document.querySelector('.gamestart-form').classList.toggle('hidden');\n    document.querySelector('.start-game-AI-btn').addEventListener('click', () => {\n      const isOpponentAI = !player2NameInput.value;\n      (0,_gameLoop_js__WEBPACK_IMPORTED_MODULE_0__.setUpPlayers)(player1NameInput.value, player2NameInput.value, isOpponentAI);\n    });\n  });\n}\nfunction clearGameboards() {\n  const gameboards = document.querySelectorAll('.player-area');\n  gameboards.forEach(gameboard => {\n    gameboard.parentElement.removeChild(gameboard);\n  });\n}\nfunction addHiddenClassToElement(element) {\n  element.classList.add('hidden');\n}\nstartGameWithAIBtn.addEventListener('click', () => {\n  const isOpponentAI = !player2NameInput.value;\n  (0,_gameLoop_js__WEBPACK_IMPORTED_MODULE_0__.setUpPlayers)(player1NameInput.value, player2NameInput.value, isOpponentAI);\n});\nstartGameWithPlayerBtn.addEventListener('click', () => {\n  const isOpponentAI = !player2NameInput.value;\n  (0,_gameLoop_js__WEBPACK_IMPORTED_MODULE_0__.setUpPlayers)(player1NameInput.value, player2NameInput.value, isOpponentAI);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Player\": () => (/* binding */ Player)\n/* harmony export */ });\n/* harmony import */ var _gameboard_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameboard.js */ \"./src/gameboard.js\");\n\nfunction Player(name) {\n  let isComputer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return {\n    name,\n    isComputer,\n    didLastShotHit: false,\n    lastShotCoords: null,\n    possibleShotsIfLastHit: null,\n    firstHitCoords: null,\n    hitAxis: null,\n    hitDirection: null,\n    isMyTurn: null,\n    gameboard: new _gameboard_js__WEBPACK_IMPORTED_MODULE_0__.Gameboard(),\n    attackEnemy(attackCoords, enemyPlayer) {\n      const attackResponse = enemyPlayer.gameboard.receiveAttack(attackCoords);\n      if (attackResponse === null) return null;\n      if (attackResponse.isHit) {\n        this.didLastShotHit = true;\n      } else {\n        this.didLastShotHit = false;\n      }\n      this.lastShotCoords = attackCoords;\n      if (attackResponse.didSink) {\n        this.mutatePlayerObjectAfterSinkingShip();\n      }\n      return attackResponse;\n    },\n    placeShipsRandomly() {\n      for (let i = 5; i >= 1; i -= 1) {\n        const length = i;\n        let startCoord = this.calculateRandomCoords();\n        const axis = this.calculateRandomAxis();\n        while (!this.gameboard.determineIfShipIsOnGameboard(length, startCoord, axis) || this.gameboard.determineIfShipIsOnAnotherShip(length, startCoord, axis)) {\n          startCoord = this.calculateRandomCoords();\n        }\n        switch (i) {\n          case 5:\n            this.gameboard.placeShip(length, this.name, 'Carrier', startCoord, axis);\n            break;\n          case 4:\n            this.gameboard.placeShip(length, this.name, 'Battleship', startCoord, axis);\n            break;\n          case 3:\n            this.gameboard.placeShip(length, this.name, 'Cruiser', startCoord, axis);\n            break;\n          case 2:\n            this.gameboard.placeShip(length + 1, this.name, 'Submarine', startCoord, axis);\n            break;\n          case 1:\n            this.gameboard.placeShip(length + 1, this.name, 'Destroyer', startCoord, axis);\n            break;\n          default:\n            console.log('shit');\n        }\n      }\n    },\n    computerShot(enemyPlayer) {\n      if (!this.isComputer) return;\n      let nextShot;\n      console.log(this);\n      if (this.hitAxis !== null && this.hitDirection !== null && !this.didLastShotHit) {\n        console.log('Attacking ship if end is reached but not sunk');\n        nextShot = this.shotIfEndOfShipButNotSunk();\n        if (this.isNextShotAlreadyDone(nextShot, enemyPlayer)) {\n          nextShot = this.shotIfLookingForSecondHit(enemyPlayer);\n        }\n        const attackResponse = this.attackEnemy(nextShot, enemyPlayer);\n        return {\n          nextShot,\n          attackResponse\n        };\n      }\n      if (this.hitAxis !== null && this.hitDirection !== null && this.didLastShotHit) {\n        console.log('Attacking ship on axis and direction');\n        nextShot = this.shotIfShipIsHitTwice(enemyPlayer);\n        const attackResponse = this.attackEnemy(nextShot, enemyPlayer);\n        return {\n          nextShot,\n          attackResponse\n        };\n      }\n      if (this.didLastShotHit || this.possibleShotsIfLastHit !== null) {\n        console.log('Attacking on search pattern');\n        if (this.possibleShotsIfLastHit === null) {\n          this.possibleShotsIfLastHit = [[this.lastShotCoords[0] + 1, this.lastShotCoords[1]], [this.lastShotCoords[0] - 1, this.lastShotCoords[1]], [this.lastShotCoords[0], this.lastShotCoords[1] + 1], [this.lastShotCoords[0], this.lastShotCoords[1] - 1]].filter(value => value[0] > 0 && value[0] < 11 && value[1] > 0 && value[1] < 11);\n        }\n        nextShot = this.shotIfLookingForSecondHit(enemyPlayer);\n        const attackResponse = this.attackEnemy(nextShot, enemyPlayer);\n        if (attackResponse.isHit) this.mutatePlayerObjectOnHit();\n        return {\n          nextShot,\n          attackResponse\n        };\n      }\n\n      // * No hit, no ship in sinking, random shot\n      if (!this.didLastShotHit && this.possibleShotsIfLastHit === null) {\n        console.log('RANDOM SHOT');\n        nextShot = this.randomShot(enemyPlayer);\n        const attackResponse = this.attackEnemy(nextShot, enemyPlayer);\n        return {\n          nextShot,\n          attackResponse\n        };\n      }\n    },\n    shotIfEndOfShipButNotSunk() {\n      let nextShot;\n      if (this.hitDirection === 'positive') {\n        this.hitDirection = 'negative';\n      } else if (this.hitDirection === 'negative') {\n        this.hitDirection = 'positive';\n      }\n      if (this.hitAxis === 'X') {\n        if (this.hitDirection === 'positive') {\n          nextShot = [this.firstHitCoords[0] + 1, this.firstHitCoords[1]];\n        } else if (this.hitDirection === 'negative') {\n          nextShot = [this.firstHitCoords[0] - 1, this.firstHitCoords[1]];\n        }\n      } else if (this.hitAxis === 'Y') {\n        if (this.hitDirection === 'positive') {\n          nextShot = [this.firstHitCoords[0], this.firstHitCoords[1] + 1];\n        } else if (this.hitDirection === 'negative') {\n          nextShot = [this.firstHitCoords[0], this.firstHitCoords[1] - 1];\n        }\n      }\n      return nextShot;\n    },\n    shotIfShipIsHitTwice(enemyPlayer) {\n      let nextShot;\n      if (this.hitAxis === 'X') {\n        if (this.hitDirection === 'positive') {\n          nextShot = [this.lastShotCoords[0] + 1, this.lastShotCoords[1]];\n        } else if (this.hitDirection === 'negative') {\n          nextShot = [this.lastShotCoords[0] - 1, this.lastShotCoords[1]];\n        }\n      } else if (this.hitAxis === 'Y') {\n        if (this.hitDirection === 'positive') {\n          nextShot = [this.lastShotCoords[0], this.lastShotCoords[1] + 1];\n        } else if (this.hitDirection === 'negative') {\n          nextShot = [this.lastShotCoords[0], this.lastShotCoords[1] - 1];\n        }\n      }\n      if (this.isNextShotAlreadyDone(nextShot, enemyPlayer)) {\n        nextShot = this.shotIfEndOfShipButNotSunk();\n      }\n      if (nextShot[0] < 1 || nextShot[0] > 10 || nextShot[1] < 1 || nextShot[1] > 10) {\n        nextShot = this.shotIfLookingForSecondHit(enemyPlayer);\n      }\n      return nextShot;\n    },\n    shotIfLookingForSecondHit(enemyPlayer) {\n      let nextShot;\n      if (this.firstHitCoords === null) this.firstHitCoords = this.lastShotCoords;\n      if (this.possibleShotsIfLastHit.length === 0) {\n        nextShot = this.randomShot();\n        return nextShot;\n      }\n      nextShot = this.possibleShotsIfLastHit.splice(Math.floor(Math.random() * this.possibleShotsIfLastHit.length), 1);\n      while (this.isNextShotAlreadyDone(nextShot[0], enemyPlayer)) {\n        nextShot = this.possibleShotsIfLastHit.splice(Math.floor(Math.random() * this.possibleShotsIfLastHit.length), 1);\n      }\n      return nextShot[0];\n    },\n    randomShot(enemyPlayer) {\n      let nextShot = this.calculateNextShotCoords();\n      while (this.isNextShotAlreadyDone(nextShot, enemyPlayer)) {\n        nextShot = this.calculateNextShotCoords();\n      }\n      return nextShot;\n    },\n    mutatePlayerObjectAfterSinkingShip() {\n      this.didLastShotHit = false;\n      this.possibleShotsIfLastHit = null;\n      this.firstHitCoords = null;\n      this.hitAxis = null;\n      this.hitDirection = null;\n    },\n    mutatePlayerObjectOnHit() {\n      console.log('MUTATING OBJECT');\n      if (this.didLastShotHit) {\n        const hitDirData = [this.firstHitCoords[0] - this.lastShotCoords[0], this.firstHitCoords[1] - this.lastShotCoords[1]];\n        if (hitDirData[0] !== 0) {\n          this.hitAxis = 'X';\n        } else {\n          this.hitAxis = 'Y';\n        }\n        if (hitDirData[0] === -1 || hitDirData[1] === -1) {\n          this.hitDirection = 'positive';\n        } else {\n          this.hitDirection = 'negative';\n        }\n      }\n    },\n    calculateNextShotCoords() {\n      return [this.getRandomNumBetween1And10(), this.getRandomNumBetween1And10()];\n    },\n    calculateRandomCoords() {\n      return [this.getRandomNumBetween1And10(), this.getRandomNumBetween1And10()];\n    },\n    calculateRandomAxis() {\n      return Math.floor(Math.random() * 2) ? 'X' : 'Y';\n    },\n    isNextShotAlreadyDone(shotCoords, enemyPlayer) {\n      let isShotAlreadyDone = false;\n      for (let i = 0; i < enemyPlayer.gameboard.missedHits.length; i += 1) {\n        if (enemyPlayer.gameboard.missedHits[i][0] === shotCoords[0] && enemyPlayer.gameboard.missedHits[i][1] === shotCoords[1]) {\n          isShotAlreadyDone = true;\n          break;\n        }\n        continue;\n      }\n      return isShotAlreadyDone;\n    },\n    getRandomNumBetween1And10() {\n      return Math.floor(Math.random() * 10) + 1;\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/player.js\n");

/***/ }),

/***/ "./src/ships.js":
/*!**********************!*\
  !*** ./src/ships.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ship\": () => (/* binding */ Ship)\n/* harmony export */ });\nfunction Ship(length, team, type, coordinates, axis) {\n  return {\n    team,\n    type,\n    id: `${type.toLowerCase()}-${team}`,\n    length,\n    startCoordinates: coordinates,\n    axis,\n    numberOfHits: 0,\n    hit() {\n      this.numberOfHits += 1;\n    },\n    isSunk() {\n      if (this.numberOfHits >= length) return true;\n      return false;\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hpcHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLElBQUlBLENBQUNDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLFdBQVcsRUFBRUMsSUFBSSxFQUFFO0VBQzFELE9BQU87SUFDTEgsSUFBSTtJQUNKQyxJQUFJO0lBQ0pHLEVBQUUsRUFBRyxHQUFFSCxJQUFJLENBQUNJLFdBQVcsRUFBRyxJQUFHTCxJQUFLLEVBQUM7SUFDbkNELE1BQU07SUFDTk8sZ0JBQWdCLEVBQUVKLFdBQVc7SUFDN0JDLElBQUk7SUFDSkksWUFBWSxFQUFFLENBQUM7SUFDZkMsR0FBR0EsQ0FBQSxFQUFHO01BQ0osSUFBSSxDQUFDRCxZQUFZLElBQUksQ0FBQztJQUN4QixDQUFDO0lBQ0RFLE1BQU1BLENBQUEsRUFBRztNQUNQLElBQUksSUFBSSxDQUFDRixZQUFZLElBQUlSLE1BQU0sRUFBRSxPQUFPLElBQUk7TUFDNUMsT0FBTyxLQUFLO0lBQ2Q7RUFDRixDQUFDO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3NoaXBzLmpzPzVkNWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIFNoaXAobGVuZ3RoLCB0ZWFtLCB0eXBlLCBjb29yZGluYXRlcywgYXhpcykge1xuICByZXR1cm4ge1xuICAgIHRlYW0sXG4gICAgdHlwZSxcbiAgICBpZDogYCR7dHlwZS50b0xvd2VyQ2FzZSgpfS0ke3RlYW19YCxcbiAgICBsZW5ndGgsXG4gICAgc3RhcnRDb29yZGluYXRlczogY29vcmRpbmF0ZXMsXG4gICAgYXhpcyxcbiAgICBudW1iZXJPZkhpdHM6IDAsXG4gICAgaGl0KCkge1xuICAgICAgdGhpcy5udW1iZXJPZkhpdHMgKz0gMTtcbiAgICB9LFxuICAgIGlzU3VuaygpIHtcbiAgICAgIGlmICh0aGlzLm51bWJlck9mSGl0cyA+PSBsZW5ndGgpIHJldHVybiB0cnVlO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sXG4gIH07XG59XG4iXSwibmFtZXMiOlsiU2hpcCIsImxlbmd0aCIsInRlYW0iLCJ0eXBlIiwiY29vcmRpbmF0ZXMiLCJheGlzIiwiaWQiLCJ0b0xvd2VyQ2FzZSIsInN0YXJ0Q29vcmRpbmF0ZXMiLCJudW1iZXJPZkhpdHMiLCJoaXQiLCJpc1N1bmsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ships.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;